{
    "openapi": "3.0.0",
    "paths": {
        "/token/metadata": {
            "get": {
                "operationId": "TokenMetadata",
                "summary": "",
                "description": "Get the metadata of an ERC20 Token.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                1946,
                                2020,
                                204,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                33139,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The projects provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblocks dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "Tatum",
                                "SimpleHash",
                                "Helius",
                                "Shyft",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenMetadataResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/token/balance": {
            "get": {
                "operationId": "WalletTokenBalance",
                "summary": "",
                "description": "Get the token balances of an address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                1946,
                                2020,
                                204,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includePrice",
                        "required": false,
                        "in": "query",
                        "description": "When set to true it will return the USD value of the specified token.",
                        "schema": {}
                    },
                    {
                        "name": "includeMetadata",
                        "required": false,
                        "in": "query",
                        "description": "When set to true it will return the token metadata along with the balance.",
                        "schema": {}
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "Tatum",
                                "Shyft",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTokenBalanceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/token/balance/historical": {
            "get": {
                "operationId": "WalletTokenHistoricalBalance",
                "summary": "",
                "description": "Get the historical token balances of an address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                137,
                                167000,
                                167009,
                                17000,
                                2442,
                                25,
                                250,
                                4002,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                5000,
                                56,
                                59141,
                                59144,
                                80002,
                                80084,
                                8453,
                                84532,
                                88882,
                                88888,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "timestamp",
                        "required": false,
                        "in": "query",
                        "description": "The timestamp of the historical balance to query.",
                        "example": 1625097600,
                        "schema": {
                            "default": 1625097600,
                            "type": "number"
                        }
                    },
                    {
                        "name": "blockNumber",
                        "required": false,
                        "in": "query",
                        "description": "The block number of the historical balance to query.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "includePrice",
                        "required": false,
                        "in": "query",
                        "description": "When set to true it will return the USD value of the specified token.",
                        "schema": {}
                    },
                    {
                        "name": "includeMetadata",
                        "required": false,
                        "in": "query",
                        "description": "When set to true it will return the token metadata along with the balance.",
                        "schema": {}
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "Moralis",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTokenHistoricalBalanceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/token/price": {
            "get": {
                "operationId": "TokenPrice",
                "summary": "",
                "description": "Get the USD price of a token.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                1946,
                                2020,
                                204,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "exchange",
                        "required": false,
                        "in": "query",
                        "description": "The exchange to query the price from.",
                        "schema": {
                            "enum": [
                                "uniswap-v2",
                                "uniswap-v3",
                                "sushiswap-v2",
                                "pancakeswap-v1",
                                "pancakeswap-v2",
                                "quickswap"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenPriceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/token/price/historical": {
            "get": {
                "operationId": "TokenHistoricalPrice",
                "summary": "",
                "description": "Get the historical USD price of a token.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                1946,
                                2020,
                                204,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "exchange",
                        "required": false,
                        "in": "query",
                        "description": "The exchange to query the price from.",
                        "schema": {
                            "enum": [
                                "uniswap-v2",
                                "uniswap-v3",
                                "sushiswap-v2",
                                "pancakeswap-v1",
                                "pancakeswap-v2",
                                "quickswap"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "timestamp",
                        "required": false,
                        "in": "query",
                        "description": "The timestamp to query from.",
                        "example": 1625097600,
                        "schema": {
                            "default": 1625097600,
                            "type": "number"
                        }
                    },
                    {
                        "name": "blockNumber",
                        "required": false,
                        "in": "query",
                        "description": "The block number to query from.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "DefiLlama",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenHistoricPriceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/token/transfers": {
            "get": {
                "operationId": "WalletTokenTransfers",
                "summary": "",
                "description": "Get the token transfers of an address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                1946,
                                2020,
                                204,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                592,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromBlock",
                        "required": false,
                        "in": "query",
                        "description": "Starting block number to query from.",
                        "example": 0,
                        "schema": {}
                    },
                    {
                        "name": "includeLogo",
                        "required": false,
                        "in": "query",
                        "description": "Whether to include the token logo in the response. Only works with Moralis and Covalent",
                        "example": false,
                        "schema": {}
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTokenTransfersResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/token/allowances": {
            "get": {
                "operationId": "WalletTokenAllowances",
                "summary": "",
                "description": "Get the allowances of an address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                2020,
                                2442,
                                248,
                                25,
                                250,
                                288,
                                300,
                                324,
                                4002,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                7000,
                                7001,
                                80002,
                                80084,
                                81457,
                                8453,
                                84532,
                                9001,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTokenAllowancesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/token/activity": {
            "get": {
                "operationId": "WalletTokenActivity",
                "summary": "",
                "description": "Retrieve the last active timestamp for a wallet across each of 100+ chains.",
                "parameters": [
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTokenActivityQueryDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Token"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/market-data/price": {
            "get": {
                "operationId": "MarketDataPrice",
                "summary": "",
                "description": "Gets the price of a token.",
                "parameters": [
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "The ID of the coin to get price of, separated by commas for multiple coins",
                        "example": "cg:ethereum, cg:tether, cmc:5426",
                        "schema": {
                            "default": "cg:ethereum, cg:tether, cmc:5426",
                            "type": "string"
                        }
                    },
                    {
                        "name": "symbol",
                        "required": false,
                        "in": "query",
                        "description": "Symbols of coin to get price of, separated by commas for multiple coins",
                        "example": "ETH,USDT,SOL",
                        "schema": {
                            "default": "ETH,USDT,SOL",
                            "type": "string"
                        }
                    },
                    {
                        "name": "chainId",
                        "required": false,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network, separated by commas for multiple tokens",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenAddress",
                        "required": false,
                        "in": "query",
                        "description": "The address of the token to query, separated by commas for multiple tokens",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeAllCurrencies",
                        "required": false,
                        "in": "query",
                        "description": "Whether to get price in all currencies",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "CoinGecko",
                                "CoinMarketCap",
                                "DefiLlama",
                                "CryptoCompare",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketDataPriceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Market Data"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/market-data/market-cap": {
            "get": {
                "operationId": "MarketDataMarketCap",
                "summary": "",
                "description": "Gets the market cap of a token.",
                "parameters": [
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "The ID of the coin to get market cap of",
                        "example": "cg:ethereum",
                        "schema": {
                            "default": "cg:ethereum",
                            "type": "string"
                        }
                    },
                    {
                        "name": "symbol",
                        "required": false,
                        "in": "query",
                        "description": "Symbol of coin to get market cap of",
                        "example": "ETH",
                        "schema": {
                            "default": "ETH",
                            "type": "string"
                        }
                    },
                    {
                        "name": "chainId",
                        "required": false,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": "1",
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                11155111,
                                137,
                                250,
                                42161,
                                42220,
                                43114,
                                56,
                                97
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "tokenAddress",
                        "required": false,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeAllCurrencies",
                        "required": false,
                        "in": "query",
                        "description": "Whether to get marketcap in all currencies",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "CoinGecko",
                                "CoinMarketCap",
                                "CryptoCompare",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketDataMarketCapResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Market Data"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/market-data/24-hour-volume": {
            "get": {
                "operationId": "MarketData24HourVolume",
                "summary": "",
                "description": "Gets the 24 hour volume of a token.",
                "parameters": [
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "The ID of the coin to get market cap of",
                        "example": "cg:ethereum",
                        "schema": {
                            "default": "cg:ethereum",
                            "type": "string"
                        }
                    },
                    {
                        "name": "symbol",
                        "required": false,
                        "in": "query",
                        "description": "Symbol of coin to get 24 hour volume of",
                        "example": "ETH",
                        "schema": {
                            "default": "ETH",
                            "type": "string"
                        }
                    },
                    {
                        "name": "chainId",
                        "required": false,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": "1",
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                11155111,
                                137,
                                250,
                                42161,
                                42220,
                                43114,
                                56,
                                97
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "tokenAddress",
                        "required": false,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeAllCurrencies",
                        "required": false,
                        "in": "query",
                        "description": "Whether to get marketcap in all currencies",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "CoinGecko",
                                "CoinMarketCap",
                                "CryptoCompare",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketData24hVolumeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Market Data"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/market-data/history": {
            "get": {
                "operationId": "MarketDataTokenHistorySnapshot",
                "summary": "",
                "description": "Gets the price, volume, market cap of a token at a given date.",
                "parameters": [
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "The ID of the coin to get market cap of",
                        "example": "cg:ethereum",
                        "schema": {
                            "default": "cg:ethereum",
                            "type": "string"
                        }
                    },
                    {
                        "name": "symbol",
                        "required": false,
                        "in": "query",
                        "description": "Symbol of coin to get info of",
                        "example": "ETH",
                        "schema": {
                            "default": "ETH",
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "required": true,
                        "in": "query",
                        "description": "Date in dd-mm-yyyy. Information will be from 12am UTC of that date",
                        "example": "9-2-2025",
                        "schema": {
                            "default": "9-2-2025",
                            "type": "string"
                        }
                    },
                    {
                        "name": "timestamp",
                        "required": false,
                        "in": "query",
                        "description": "UNIX timestamp of data in seconds",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeAllCurrencies",
                        "required": false,
                        "in": "query",
                        "description": "Whether to get marketcap in all currencies",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "chainId",
                        "required": false,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": "1",
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                11155111,
                                137,
                                250,
                                42161,
                                42220,
                                43114,
                                56,
                                97
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "tokenAddress",
                        "required": false,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "CoinGecko",
                                "CoinMarketCap",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketDataHistoryResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Market Data"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/market-data/chart-range": {
            "get": {
                "operationId": "MarketDataMarketChartRange",
                "summary": "",
                "description": "Gets the price, volume, market cap of a token at a given range on a predefined granularity.",
                "parameters": [
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "The ID of the coin to get market cap of",
                        "example": "cg:ethereum",
                        "schema": {
                            "default": "cg:ethereum",
                            "type": "string"
                        }
                    },
                    {
                        "name": "symbol",
                        "required": false,
                        "in": "query",
                        "description": "Symbol of coin to get price of",
                        "example": "ETH",
                        "schema": {
                            "default": "ETH",
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency",
                        "required": true,
                        "in": "query",
                        "description": "Target currency (usd, eur, jpy, etc)",
                        "example": "usd",
                        "schema": {
                            "default": "usd",
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "required": true,
                        "in": "query",
                        "description": "UNIX Timestamp (eg 1700000000)",
                        "example": 1738961737,
                        "schema": {
                            "default": 1738184137,
                            "type": "number"
                        }
                    },
                    {
                        "name": "to",
                        "required": true,
                        "in": "query",
                        "description": "UNIX Timestamp (eg 1706000000)",
                        "example": 1739220937,
                        "schema": {
                            "default": 1739220937,
                            "type": "number"
                        }
                    },
                    {
                        "name": "chainId",
                        "required": false,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": "1",
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                11155111,
                                137,
                                250,
                                42161,
                                42220,
                                43114,
                                56,
                                97
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "tokenAddress",
                        "required": false,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "CoinGecko",
                                "CoinMarketCap",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketDataMarketChartRangeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Market Data"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/market-data/chart-price-range": {
            "get": {
                "operationId": "MarketDataMarketChartPriceRange",
                "summary": "",
                "description": "Gets the price of a token at a given range in a period.",
                "parameters": [
                    {
                        "name": "id",
                        "required": false,
                        "in": "query",
                        "description": "The ID of the coin to get market cap of",
                        "example": "cg:ethereum",
                        "schema": {
                            "default": "cg:ethereum",
                            "type": "string"
                        }
                    },
                    {
                        "name": "symbol",
                        "required": false,
                        "in": "query",
                        "description": "Symbol of coin to get price of",
                        "example": "ETH",
                        "schema": {
                            "default": "ETH",
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency",
                        "required": false,
                        "in": "query",
                        "description": "Target currency (usd, eur, jpy, etc)",
                        "example": "usd",
                        "schema": {
                            "default": "usd",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenAddress",
                        "required": false,
                        "in": "query",
                        "description": "The address of the token to query.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "required": true,
                        "in": "query",
                        "description": "Unix timestamp for start",
                        "example": "1700000000",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "end",
                        "required": true,
                        "in": "query",
                        "description": "Unix timestamp for end",
                        "example": "1706000000",
                        "schema": {
                            "default": "1706000000",
                            "type": "number"
                        }
                    },
                    {
                        "name": "period",
                        "required": false,
                        "in": "query",
                        "description": "Duration between data points. Strings accepted by period: Can use regular chart candle notion like ‘4h’ etc where: W = week, D = day, H = hour, M = minute (not case sensitive) ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "chainId",
                        "required": false,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": "1",
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11155111,
                                1284,
                                1285,
                                137,
                                1666600000,
                                25,
                                250,
                                288,
                                300,
                                324,
                                369,
                                42161,
                                42220,
                                43114,
                                4689,
                                56,
                                59144,
                                592,
                                66,
                                80094,
                                81457,
                                8217,
                                8453,
                                9001,
                                "celestia",
                                "osmosis",
                                "pokt",
                                "radix",
                                "solana",
                                "sui"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "CoinGecko",
                                "DefiLlama",
                                "Defined",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketDataMarketChartPriceRangeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Market Data"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/market-data/trending": {
            "get": {
                "operationId": "MarketDataTrendingTokens",
                "summary": "",
                "description": "Gets the trending tokens.",
                "parameters": [
                    {
                        "name": "criteria",
                        "required": false,
                        "in": "query",
                        "description": "Trending based on criteria",
                        "example": "Gainers And Losers",
                        "schema": {
                            "default": "Gainers And Losers",
                            "enum": [
                                "Most Searched",
                                "Gainers And Losers",
                                "Most Visited",
                                "Volume",
                                "Market Cap"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "CoinGecko",
                                "CoinMarketCap",
                                "CryptoCompare",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketDataTrendingTokensResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Market Data"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/balance": {
            "get": {
                "operationId": "WalletNFTBalance",
                "summary": "",
                "description": "Get the NFT balances of an address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                167000,
                                167009,
                                17000,
                                1946,
                                204,
                                2442,
                                25,
                                250,
                                2741,
                                300,
                                324,
                                33139,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeCachedImage",
                        "required": false,
                        "in": "query",
                        "description": "Returns a link to the cached image. This option is not supported by all. providers.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "Tatum",
                                "SimpleHash",
                                "Shyft",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletNFTBalanceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/balance/advanced": {
            "get": {
                "operationId": "WalletNFTBalanceAdvanced",
                "summary": "",
                "description": "Get the NFT balances of an address.",
                "parameters": [
                    {
                        "name": "chainIds",
                        "required": true,
                        "in": "query",
                        "description": "Unique comma-separated chainIds for blockchain networks",
                        "example": "1,56,137",
                        "schema": {
                            "default": "1,56,137",
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddresses",
                        "required": true,
                        "in": "query",
                        "description": "Comma-separated wallet addresses to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "queriedWalletBalances",
                        "required": false,
                        "in": "query",
                        "description": "Include a field 'queried_wallet_balances' that includes the quantity owned and acquired dates of each passed wallet address on each NFT response body (useful for NFTs with many owners, such as ERC1155s)",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "collectionIds",
                        "required": false,
                        "in": "query",
                        "description": "List of Collection IDs to filter on, comma-separated. Limit of 40 collection IDs.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractIds",
                        "required": false,
                        "in": "query",
                        "description": "Comma-separated list of contract_id values to filter the results on.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "required": false,
                        "in": "query",
                        "description": "Comma-separated list of filters in the format of key=value. Current keys include: spam_score__lte, spam_score__gte, spam_score__lt, spam_score__gt.",
                        "example": "spam_score__gte=90",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "excludedContractIds",
                        "required": false,
                        "in": "query",
                        "description": "Comma-separated list of contract_id values to hide from the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeEscrowedNFTs",
                        "required": false,
                        "in": "query",
                        "description": "Add NFTs that are associated with this wallet, but held by an escrow account.",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "count",
                        "required": false,
                        "in": "query",
                        "description": "Include the total distinct count of tokens in the response.",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletNFTBalanceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/nft-in-collection": {
            "get": {
                "operationId": "NFTInCollection",
                "summary": "",
                "description": "Get the NFTs of a collection by contract address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                167000,
                                167009,
                                17000,
                                1946,
                                204,
                                2442,
                                25,
                                250,
                                2741,
                                300,
                                324,
                                33139,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "Tatum",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTInCollectionResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/transfers": {
            "get": {
                "operationId": "NFTTransfersByWallet",
                "summary": "",
                "description": "Get the NFT transfers of a wallet.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                17000,
                                1946,
                                204,
                                2442,
                                25,
                                250,
                                2741,
                                300,
                                324,
                                33139,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Moralis",
                                "Parsiq",
                                "Tatum",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTTransfersByWalletResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/transfers/nft": {
            "get": {
                "operationId": "NFTTransfersByNft",
                "summary": "",
                "description": "Get the transfers of a nft.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                2020,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                33139,
                                4002,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                7000,
                                7001,
                                80002,
                                80084,
                                81457,
                                8453,
                                84532,
                                9001,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of nft contract to query.",
                        "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                        "schema": {
                            "default": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenId",
                        "required": true,
                        "in": "query",
                        "description": "The ID of the token.",
                        "example": "1",
                        "schema": {
                            "default": "1",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTTransfersByNftResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/transfers/collection-id": {
            "get": {
                "operationId": "NFTTransfersByCollectionId",
                "summary": "",
                "description": "Get the transfers of a collection by collection id.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "required": true,
                        "in": "query",
                        "description": "The collection ID to query.",
                        "example": "510139ec0d8cf5513d59a8d3afa1c061",
                        "schema": {
                            "default": "510139ec0d8cf5513d59a8d3afa1c061",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeNFTDetails",
                        "required": false,
                        "in": "query",
                        "description": "Include the associated NFT details for the transfer within the response",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTTransfersByCollectionIdResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection-metadata": {
            "get": {
                "operationId": "NFTCollectionMetadata",
                "summary": "",
                "description": "Get the metadata of an NFT collection.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                1946,
                                2020,
                                204,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                33139,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "Tatum",
                                "BlockDaemon",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTCollectionMetadataResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection-metadata/collection-id": {
            "get": {
                "operationId": "NFTCollectionMetadataByCollectionId",
                "summary": "",
                "description": "Get the metadata of an NFT collection by collection id.",
                "parameters": [
                    {
                        "name": "collectionIds",
                        "required": true,
                        "in": "query",
                        "description": "Comma-separated collection IDs to query. (Max 20)",
                        "example": "510139ec0d8cf5513d59a8d3afa1c061",
                        "schema": {
                            "default": "510139ec0d8cf5513d59a8d3afa1c061",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeTopContractDetails",
                        "required": false,
                        "in": "query",
                        "description": "Include the associated contract details for the addresses listed in top_contracts.",
                        "example": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTCollectionMetadataByCollectionIdResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection/traits": {
            "get": {
                "operationId": "NFTCollectionTraits",
                "summary": "",
                "description": "Get the traits of a collection.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                137,
                                167000,
                                167009,
                                2442,
                                324,
                                42161,
                                42170,
                                43113,
                                5000,
                                56,
                                7000,
                                80084,
                                8453,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTCollectionTraitsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection/rarity": {
            "get": {
                "operationId": "NFTCollectionRarity",
                "summary": "",
                "description": "Get summary of attribute prevalence for an NFT collection. Commonly used to calculate rarity scores for a collection based on its traits.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                10200,
                                11124,
                                137,
                                167000,
                                167009,
                                1946,
                                204,
                                2442,
                                2741,
                                324,
                                4157,
                                42161,
                                42170,
                                43113,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80084,
                                80094,
                                81457,
                                8453,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTCollectionRarityResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection/trait/attributes": {
            "get": {
                "operationId": "NFTTraitAttributes",
                "summary": "",
                "description": "Get the attributes of a trait in a collection.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                137,
                                167000,
                                167009,
                                2442,
                                324,
                                42161,
                                42170,
                                43113,
                                5000,
                                56,
                                7000,
                                80084,
                                8453,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                        "schema": {
                            "default": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                            "type": "string"
                        }
                    },
                    {
                        "name": "trait",
                        "required": true,
                        "in": "query",
                        "description": "The trait to query.",
                        "example": "Background",
                        "schema": {
                            "default": "Background",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTTraitAttributesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/nft-in-collection/collection-id": {
            "get": {
                "operationId": "NFTInCollectionByCollectionId",
                "summary": "",
                "description": "Get the metadata of all NFTs in a collection by collection id.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "required": true,
                        "in": "query",
                        "description": "The collection ID to query.",
                        "example": "510139ec0d8cf5513d59a8d3afa1c061",
                        "schema": {
                            "default": "510139ec0d8cf5513d59a8d3afa1c061",
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "required": false,
                        "in": "query",
                        "description": "Include the total distinct count of tokens in the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeAttributePercentages",
                        "required": false,
                        "in": "query",
                        "description": "For NFTs with structured attributes in their extra_metadata, include the percentage of tokens in the collection that have each trait_type + value (pass include_attribute_percentages=1)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeUnitPriceEthWei",
                        "required": false,
                        "in": "query",
                        "description": "For NFTs with last_sale information, include the equivalent ETH unit price, in wei, of the transaction",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "chains",
                        "required": false,
                        "in": "query",
                        "description": "Optional name of the chain(s), comma-separated for multiple values (e.g., polygon,ethereum). This is useful for filtering by chain for collections that span multiple chains.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTInCollectionResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection/volumes-market-caps": {
            "get": {
                "operationId": "NFTCollectionVolumesMarketCaps",
                "summary": "",
                "description": "Get the volume and market cap of a collection.",
                "parameters": [
                    {
                        "name": "collectionIds",
                        "required": true,
                        "in": "query",
                        "description": "Comma-separated collection IDs to query. (Max 5)",
                        "example": "510139ec0d8cf5513d59a8d3afa1c061",
                        "schema": {
                            "default": "510139ec0d8cf5513d59a8d3afa1c061",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeTopContractDetails",
                        "required": false,
                        "in": "query",
                        "description": "Include the associated contract details for the addresses listed in top_contracts.",
                        "example": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeCollectionDetails",
                        "required": false,
                        "in": "query",
                        "description": "Include the full collection response.",
                        "example": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "marketplaceId",
                        "required": false,
                        "in": "query",
                        "description": "Marketplace id to filter the collections.",
                        "example": "opensea",
                        "schema": {}
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTCollectionVolumesMarketCapsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection/top-collectors/collection-id": {
            "get": {
                "operationId": "NFTCollectionTopCollectorsByCollectionId",
                "summary": "",
                "description": "Get the top collectors of a collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "required": true,
                        "in": "query",
                        "description": "The collection ID to query.",
                        "example": "510139ec0d8cf5513d59a8d3afa1c061",
                        "schema": {
                            "default": "510139ec0d8cf5513d59a8d3afa1c061",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includePicture",
                        "required": false,
                        "in": "query",
                        "description": "Include a picture link for the NFT that this collector owns.",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeDistinctCount",
                        "required": false,
                        "in": "query",
                        "description": "Include the total distinct count of Owners in the response.",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTCollectionTopCollectorsByCollectionIdResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/collection/pricing-history/collection-id": {
            "get": {
                "operationId": "NFTCollectionPricingHistoryByCollectionId",
                "summary": "",
                "description": "Get the pricing history of a collection.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "required": true,
                        "in": "query",
                        "description": "The collection ID to query.",
                        "example": "09954610564c25f6910ccd963c09a3fa",
                        "schema": {
                            "default": "09954610564c25f6910ccd963c09a3fa",
                            "type": "string"
                        }
                    },
                    {
                        "name": "granularity",
                        "required": true,
                        "in": "query",
                        "description": "The granularity of the data to query.",
                        "example": "hourly",
                        "schema": {
                            "default": "hourly"
                        }
                    },
                    {
                        "name": "marketplaceIds",
                        "required": false,
                        "in": "query",
                        "description": "The marketplace IDs to query.",
                        "schema": {
                            "enum": [
                                "opensea",
                                "looksrare",
                                "magiceden",
                                "tensor",
                                "x2y2",
                                "blur",
                                "cryptopunks"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromTimestamp",
                        "required": false,
                        "in": "query",
                        "description": "For 'hourly' granularity only. Lower bound timestamp to filter data. Seconds since the Unix epoch.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toTimestamp",
                        "required": false,
                        "in": "query",
                        "description": "For for 'hourly' granularity only. Upper bound timestamp. Seconds since the Unix epoch.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "required": false,
                        "in": "query",
                        "description": "The start date to query with ISO 8601 daily granularity.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "required": false,
                        "in": "query",
                        "description": "The end date to query with ISO 8601 daily granularity.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTCollectionPricingHistoryByCollectionIdResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/metadata": {
            "get": {
                "operationId": "NFTMetadata",
                "summary": "",
                "description": "Get the metadata of a specific NFT.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                1946,
                                2020,
                                204,
                                2442,
                                248,
                                25,
                                250,
                                2741,
                                288,
                                300,
                                324,
                                33139,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenId",
                        "required": true,
                        "in": "query",
                        "description": "The ID of the token.",
                        "example": "1",
                        "schema": {
                            "default": "1",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "Tatum",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTMetadataResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/metadata/nft-ids": {
            "get": {
                "operationId": "NFTMetadataByNFTIds",
                "summary": "",
                "description": "Get the metadata of multiple NFTs by nft-ids.",
                "parameters": [
                    {
                        "name": "nftIds",
                        "required": true,
                        "in": "query",
                        "description": "The NFT IDs (chain.contract.token_id for EVM chains, chain.token_id for Solana) seperated by commas.",
                        "example": "solana.2iZBbRGnLVEEZH6JDsaNsTo66s2uxx7DTchVWKU8oisR,solana.3knghmwnuaMxkiuqXrqzjL7gLDuRw6DkkZcW7F4mvkK8,ethereum.0xed5af388653567af2f388e6224dc7c4b3241c544.2767",
                        "schema": {
                            "default": "solana.2iZBbRGnLVEEZH6JDsaNsTo66s2uxx7DTchVWKU8oisR,solana.3knghmwnuaMxkiuqXrqzjL7gLDuRw6DkkZcW7F4mvkK8,ethereum.0xed5af388653567af2f388e6224dc7c4b3241c544.2767",
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "description": "Order by last sale",
                        "example": "last_sale_date_desc",
                        "schema": {}
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTMetadataByNFTIdsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/is-airdrop": {
            "get": {
                "operationId": "NFTIsAirdrop",
                "summary": "",
                "description": "Returns whether a token is marked as an airdrop or not.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10200,
                                11124,
                                137,
                                1946,
                                204,
                                2442,
                                2741,
                                4157,
                                42170,
                                43113,
                                5000,
                                534351,
                                534352,
                                545,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenId",
                        "required": true,
                        "in": "query",
                        "description": "The ID of the token.",
                        "example": "1",
                        "schema": {
                            "default": "1",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTIsAirdropResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/floor-price": {
            "get": {
                "operationId": "NFTGetFloorPrice",
                "summary": "",
                "description": "Returns the floor prices of a NFT collection by marketplace.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10200,
                                11124,
                                1946,
                                204,
                                2442,
                                2741,
                                4157,
                                42170,
                                43113,
                                5000,
                                534351,
                                534352,
                                545,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80084,
                                80094,
                                81457,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTFloorPriceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/is-nft-holder": {
            "get": {
                "operationId": "WalletNFTHolder",
                "summary": "",
                "description": "This endpoint checks whether a wallet address holds a specific NFT or if a wallet address holds any NFT from a given collection. \\n \\n If tokenId is entered, the endpoint will check if the wallet address holds that exact NFT. While if tokenId is omitted, the endpoint will check if the wallet address holds any NFT from the entered collection.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                10200,
                                11124,
                                11155111,
                                11155420,
                                137,
                                167000,
                                167009,
                                17000,
                                1946,
                                204,
                                2442,
                                2741,
                                300,
                                324,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
                        "schema": {
                            "default": "0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d",
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x46efbaedc92067e6d60e84ed6395099723252496",
                        "schema": {
                            "default": "0x46efbaedc92067e6d60e84ed6395099723252496",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenId",
                        "required": false,
                        "in": "query",
                        "description": "The ID of the token. This parameter is supported by Tatum and Covalent (When entered, the endpoint will check if the wallet address holds the specific NFT ID specified.)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Covalent",
                                "Tatum",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletNFTHolderResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/sales": {
            "get": {
                "operationId": "NFTGetSales",
                "summary": "",
                "description": "Gets NFT sales that have happened through on-chain marketplaces.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1329,
                                137,
                                1946,
                                204,
                                2442,
                                250,
                                2741,
                                324,
                                33139,
                                4157,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                        "schema": {
                            "default": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenId",
                        "required": true,
                        "in": "query",
                        "description": "The ID of the token.",
                        "example": "8999",
                        "schema": {
                            "default": "8999",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTSalesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/owned-collections": {
            "get": {
                "operationId": "WalletNFTContracts",
                "summary": "",
                "description": "Gets all NFT contracts held by an owner address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                10200,
                                11124,
                                11155111,
                                11155420,
                                137,
                                17000,
                                1946,
                                204,
                                2442,
                                2741,
                                300,
                                324,
                                4157,
                                42161,
                                421614,
                                42170,
                                43113,
                                5000,
                                534351,
                                534352,
                                545,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTOwnedContractsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/top-sales": {
            "get": {
                "operationId": "NFTTopSales",
                "summary": "",
                "description": "Get the highest valued transfers by a contract",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1329,
                                137,
                                250,
                                2741,
                                324,
                                33139,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                80002,
                                81457,
                                8453,
                                84532,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeNFTDetails",
                        "required": false,
                        "in": "query",
                        "description": "Include the associated NFT details for the transfer within the response.",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTTopSalesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/owners/nft": {
            "get": {
                "operationId": "NFTOwnersByNft",
                "summary": "",
                "description": "Get owner's wallet address or all owners wallet addresses of a specific nft. Number of owners can be greater than 1 for ERC-1155 tokens, or 0 if the token is burned.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1329,
                                137,
                                250,
                                2741,
                                324,
                                33139,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                80002,
                                81457,
                                8453,
                                84532,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenId",
                        "required": true,
                        "in": "query",
                        "description": "The ID of the token.",
                        "example": "1",
                        "schema": {
                            "default": "1",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTOwnersByNftResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/owners/contract": {
            "get": {
                "operationId": "NFTOwnersByContract",
                "summary": "",
                "description": "Get list of wallet addresses owning one or more of the contract's nfts.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1329,
                                137,
                                250,
                                2741,
                                324,
                                33139,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                80002,
                                81457,
                                8453,
                                84532,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the NFT collection to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Parsiq",
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTOwnersByContractResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/owners/collection-id": {
            "get": {
                "operationId": "NFTOwnersByCollectionId",
                "summary": "",
                "description": "Get list of wallet addresses owning one or more of the contract's nfts by collection ID.",
                "parameters": [
                    {
                        "name": "collectionId",
                        "required": true,
                        "in": "query",
                        "description": "Collection ID to query",
                        "example": "510139ec0d8cf5513d59a8d3afa1c061",
                        "schema": {
                            "default": "510139ec0d8cf5513d59a8d3afa1c061",
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "required": false,
                        "in": "query",
                        "description": "Include the total distinct count of Owners in the response.",
                        "example": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTOwnersByCollectionIdResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/nft/listings": {
            "get": {
                "operationId": "NFTListings",
                "summary": "",
                "description": "Get all active listings of an NFT.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1329,
                                137,
                                250,
                                2741,
                                324,
                                33139,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                80002,
                                81457,
                                8453,
                                84532,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of nft contract to query.",
                        "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                        "schema": {
                            "default": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tokenId",
                        "required": true,
                        "in": "query",
                        "description": "The ID of the token.",
                        "example": "1",
                        "schema": {
                            "default": "1",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeNFTDetails",
                        "required": false,
                        "in": "query",
                        "description": "Include the associated NFT details for the listing within the response.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "marketplaceIds",
                        "required": false,
                        "in": "query",
                        "description": "Marketplace IDs, comma separated for multiple values (e.g., opensea, x2y2). Allowed values: opensea, blur, x2y2, looksrare, tensor, cryptopunks, magiceden",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fromTimestamp",
                        "required": false,
                        "in": "query",
                        "description": "Lower bound listing timestamp (inclusive). Seconds since the Unix epoch.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "toTimestamp",
                        "required": false,
                        "in": "query",
                        "description": "Upper bound listing timestamp (inclusive). Seconds since the Unix epoch.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "count",
                        "required": false,
                        "in": "query",
                        "description": "Include the total distinct count of Listings in the response (pass count=1)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "orderBy",
                        "required": false,
                        "in": "query",
                        "description": "The sort order of the results.",
                        "schema": {}
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "SimpleHash",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NFTListingsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "NFT"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/transactions": {
            "get": {
                "operationId": "WalletTransactions",
                "summary": "",
                "description": "Get the transactions of an address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                2020,
                                2442,
                                248,
                                25,
                                250,
                                288,
                                300,
                                324,
                                4002,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                7000,
                                7001,
                                80002,
                                80084,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "Helius",
                                "Shyft",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTransactionsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transaction"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/transaction": {
            "get": {
                "operationId": "TransactionByHash",
                "summary": "",
                "description": "Get a specific transaction from its hash.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                137,
                                17000,
                                1946,
                                204,
                                2442,
                                25,
                                250,
                                2741,
                                300,
                                324,
                                4002,
                                4157,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                592,
                                7000,
                                7001,
                                747,
                                80002,
                                80084,
                                80094,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                97,
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "starknet-sepolia"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "transactionHash",
                        "required": true,
                        "in": "query",
                        "description": "The hash of the transaction to query.",
                        "example": "0xf19484f6838e7c75a07a85a6b79c9813a2118aa803001a9e0de2ce64885ca683",
                        "schema": {
                            "default": "0xf19484f6838e7c75a07a85a6b79c9813a2118aa803001a9e0de2ce64885ca683",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Moralis",
                                "Parsiq",
                                "BlockDaemon",
                                "Helius",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transaction"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/transactions/block": {
            "get": {
                "operationId": "TransactionsBlock",
                "summary": "",
                "description": "Get all transactions from in a block.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                2020,
                                2442,
                                248,
                                25,
                                250,
                                288,
                                300,
                                324,
                                4002,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                7000,
                                7001,
                                80002,
                                80084,
                                81457,
                                8453,
                                84532,
                                9001,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "blockHeight",
                        "required": true,
                        "in": "query",
                        "description": "The height of the block to query.",
                        "example": "14309238",
                        "schema": {
                            "default": "14309238",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTransactionsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transaction"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/transactions/advanced": {
            "get": {
                "operationId": "WalletTransactionsAdvanced",
                "summary": "",
                "description": "Get the transactions of an address, including sends, receives, token and NFT transfers, and contract interactions.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11155111,
                                11155420,
                                11297108109,
                                1284,
                                1285,
                                1329,
                                137,
                                1666600000,
                                167000,
                                167009,
                                17000,
                                2020,
                                2442,
                                248,
                                25,
                                250,
                                288,
                                300,
                                324,
                                4002,
                                42161,
                                421614,
                                42170,
                                42220,
                                43113,
                                43114,
                                5000,
                                534351,
                                534352,
                                56,
                                59141,
                                59144,
                                7000,
                                7001,
                                80002,
                                80084,
                                81457,
                                8453,
                                84532,
                                88882,
                                88888,
                                9001,
                                97,
                                "solana",
                                "solana-devnet"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor from previous query to get next page of results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Covalent",
                                "Moralis",
                                "Parsiq",
                                "Helius",
                                "Shyft",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTransactionsAdvancedResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Transaction"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/native-supply": {
            "get": {
                "operationId": "ScanStatsNativeSupply",
                "summary": "",
                "description": "Current amount of Ether in circulation, ETH2 Staking rewards, EIP1559 burnt fees, and total withdrawn ETH from the beacon chain",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanStatsNativeSupplyResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/native-price": {
            "get": {
                "operationId": "ScanStatsNativePrice",
                "summary": "",
                "description": "Returns the latest price of 1 Native Token.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanStatsNativePriceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/native-node-size": {
            "get": {
                "operationId": "ScanStatsNativeNodeSize",
                "summary": "",
                "description": "Returns the size of the native blockchain, in bytes, over a date range.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "startDate",
                        "required": true,
                        "in": "query",
                        "example": "2019-09-26",
                        "description": "The starting date in yyyy-MM-dd format",
                        "schema": {
                            "format": "date-time",
                            "default": "2019-09-26",
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "required": true,
                        "in": "query",
                        "example": "2019-09-27",
                        "description": "The ending date in yyyy-MM-dd format",
                        "schema": {
                            "format": "date-time",
                            "default": "2019-09-27",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sorting preference, use asc to sort by ascending and desc to sort by descending",
                        "schema": {
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanStatsNativeNodeSizeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/native-node-count": {
            "get": {
                "operationId": "ScanStatsNativeNodeCount",
                "summary": "",
                "description": "Returns the total number of discoverable chain nodes.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanStatsNativeNodeCountResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/estimation-confirmation-time": {
            "get": {
                "operationId": "ScanGasConfirmationTime",
                "summary": "",
                "description": "Returns the estimated time, in seconds, for a transaction to be confirmed on the blockchain.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "gasPrice",
                        "required": true,
                        "in": "query",
                        "description": "The price paid per unit of gas",
                        "example": "38000000000",
                        "schema": {
                            "default": "38000000000",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanGasConfirmationTimeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/current-gas-estimation": {
            "get": {
                "operationId": "ScanGasPrices",
                "summary": "",
                "description": "Returns the current Safe, Proposed and Fast gas prices.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanGasPricesResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/token-supply": {
            "get": {
                "operationId": "ScanTokensErc20TotalSupply",
                "summary": "",
                "description": "Returns the current amount of ERC-20 token in circulation",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the contract to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanTokenSupplyResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/token-balance": {
            "get": {
                "operationId": "ScanTokensErc20AddressBalance",
                "summary": "",
                "description": "Returns the current balance of ERC-20 token of an address",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "address",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0x21a31Ee1afC51d94C2eFcCAa2092aD1028285549",
                        "schema": {
                            "default": "0x21a31Ee1afC51d94C2eFcCAa2092aD1028285549",
                            "type": "string"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address of the ERC20 contract to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanTokenBalanceResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/transaction-execution-status": {
            "get": {
                "operationId": "ScanTransactionExecutionStatus",
                "summary": "",
                "description": "Returns the status code of a contract execution.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "transactionHash",
                        "required": true,
                        "in": "query",
                        "description": "The string representing the transaction hash to check the execution status",
                        "example": "0x2f1c5c2b44f771e942a8506148e256f94f1a464babc938ae0690c6e34cd79190",
                        "schema": {
                            "default": "0x2f1c5c2b44f771e942a8506148e256f94f1a464babc938ae0690c6e34cd79190",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanTransactionExecutionStatusResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/transaction-receipt-status": {
            "get": {
                "operationId": "ScanTransactionStatusCode",
                "summary": "",
                "description": "Returns the status code of a transaction execution.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "transactionHash",
                        "required": true,
                        "in": "query",
                        "description": "The string representing the transaction hash to check the execution status",
                        "example": "0x2f1c5c2b44f771e942a8506148e256f94f1a464babc938ae0690c6e34cd79190",
                        "schema": {
                            "default": "0x2f1c5c2b44f771e942a8506148e256f94f1a464babc938ae0690c6e34cd79190",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanTransactionStatusCodeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/block-rewards": {
            "get": {
                "operationId": "ScanBlockRewards",
                "summary": "",
                "description": "Returns the block reward and 'Uncle' block rewards.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "blockNumber",
                        "required": true,
                        "in": "query",
                        "description": "The integer block number to check block rewards",
                        "example": 2165403,
                        "schema": {
                            "default": 2165403,
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanBlockRewardsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/block-get-countdown": {
            "get": {
                "operationId": "ScanBlockCountdown",
                "summary": "",
                "description": "Returns the estimated time remaining, in seconds, until a certain block is mined.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "blockNumber",
                        "required": true,
                        "in": "query",
                        "description": "The integer block number to estimate time remaining to be mined",
                        "example": 20000000,
                        "schema": {
                            "default": 20000000,
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanBlockCountdownResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/block-by-timestamp": {
            "get": {
                "operationId": "ScanBlockByTimestamp",
                "summary": "",
                "description": "Returns the block number that was mined at a certain timestamp.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "unixTimestamp",
                        "required": true,
                        "in": "query",
                        "description": "The integer representing the Unix timestamp in seconds.",
                        "example": 1578638524,
                        "schema": {
                            "default": 1578638524,
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanBlockByTimestampResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-native-balance-single": {
            "get": {
                "operationId": "ScanAccountNativeBalanceSingle",
                "summary": "",
                "description": "Returns the Ether balance of a given address.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "required": true,
                        "in": "query",
                        "description": "Pre-defined block parameter",
                        "example": "latest",
                        "schema": {
                            "default": "latest",
                            "enum": [
                                "earliest",
                                "pending",
                                "latest"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountNativeBalanceSingleResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-native-balance-multi": {
            "get": {
                "operationId": "ScanAccountNativeBalanceMulti",
                "summary": "",
                "description": "Returns the balance of the accounts from a list of addresses.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "walletAddresses",
                        "required": true,
                        "in": "query",
                        "description": "The addresses to query. Should be comma seperated",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9,0x85b931A32a0725Be14285B66f1a22178c672d69B",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9,0x85b931A32a0725Be14285B66f1a22178c672d69B",
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "required": true,
                        "in": "query",
                        "description": "Pre-defined block parameter",
                        "example": "earliest",
                        "schema": {
                            "default": "earliest",
                            "enum": [
                                "earliest",
                                "pending",
                                "latest"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountNativeBalanceMultiResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-normal-transactions": {
            "get": {
                "operationId": "ScanAccountNormalTransactions",
                "summary": "",
                "description": "Returns the list of transactions performed by an address, with optional pagination.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "schema": {
                            "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                            "type": "string"
                        }
                    },
                    {
                        "name": "startBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to start searching for transactions",
                        "example": "18267337",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to stop searching for transactions",
                        "example": "18269837",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of items skipped from the start",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sorting preference, use asc to sort by ascending and desc to sort by descending",
                        "schema": {
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountNormalTransactionsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-internal-transactions-by-address": {
            "get": {
                "operationId": "ScanAccountInternalTransactionsAddress",
                "summary": "",
                "description": "Returns the list of internal transactions performed by an address, with optional pagination.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0xFd96F75963FBaFF02341e3cFf43f48C1f3B13343",
                        "schema": {
                            "default": "0xFd96F75963FBaFF02341e3cFf43f48C1f3B13343",
                            "type": "string"
                        }
                    },
                    {
                        "name": "startBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to start searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to stop searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sorting preference, use asc to sort by ascending and desc to sort by descending",
                        "schema": {
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountInternalTransactionsAddressResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-internal-transactions-by-hash": {
            "get": {
                "operationId": "ScanAccountInternalTransactionsHash",
                "summary": "",
                "description": "Returns the list of internal transactions performed within a transaction.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "transactionHash",
                        "required": true,
                        "in": "query",
                        "description": "The string representing the transaction hash to check for internal transactions",
                        "example": "0xc0a71280b46a5ad311414c1471d3196ef01a43f8516e4b6f9447e96f59d59512",
                        "schema": {
                            "default": "0xc0a71280b46a5ad311414c1471d3196ef01a43f8516e4b6f9447e96f59d59512",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountInternalTransactionsHashResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-internal-transactions-by-block-range": {
            "get": {
                "operationId": "ScanAccountInternalTransactionBlockRange",
                "summary": "",
                "description": "Returns the list of internal transactions performed within a block range, with optional pagination.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "startBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to start searching for transactions",
                        "example": "18763925",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to stop searching for transactions",
                        "example": "18763929",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sorting preference, use asc to sort by ascending and desc to sort by descending",
                        "schema": {
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountInternalTransactionBlockRangeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-erc20-transactions": {
            "get": {
                "operationId": "ScanAccountErc20TokenTransfer",
                "summary": "",
                "description": "Returns the list of ERC-20 tokens transferred by an address, with optional filtering by token contract.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "startBlock",
                        "required": false,
                        "in": "query",
                        "example": "18762929",
                        "description": "The integer block number to start searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endBlock",
                        "required": false,
                        "in": "query",
                        "example": "18763929",
                        "description": "The integer block number to stop searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sorting preference, use asc to sort by ascending and desc to sort by descending",
                        "schema": {
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountErc20TokenTransferResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-erc721-transactions": {
            "get": {
                "operationId": "ScanAccountErc721TokenTransfer",
                "summary": "",
                "description": "Returns the list of ERC-721 ( NFT ) tokens transferred by an address, with optional filtering by token contract.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0xFd96F75963FBaFF02341e3cFf43f48C1f3B13343",
                        "schema": {
                            "default": "0xFd96F75963FBaFF02341e3cFf43f48C1f3B13343",
                            "type": "string"
                        }
                    },
                    {
                        "name": "startBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to start searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to stop searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sorting preference, use asc to sort by ascending and desc to sort by descending",
                        "schema": {
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountErc721TokenTransferResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/account-erc1155-transactions": {
            "get": {
                "operationId": "ScanAccountErc1155TokenTransfer",
                "summary": "",
                "description": "Returns the list of ERC-1155 ( Multi Token Standard ) tokens transferred by an address, with optional filtering by token contract.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0xa4DfE0723aB2A481048371dE82f0d6A792d667d2",
                        "schema": {
                            "default": "0xa4DfE0723aB2A481048371dE82f0d6A792d667d2",
                            "type": "string"
                        }
                    },
                    {
                        "name": "walletAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0x2b994612febF52565533545cc374d75F7652ad9d",
                        "schema": {
                            "default": "0x2b994612febF52565533545cc374d75F7652ad9d",
                            "type": "string"
                        }
                    },
                    {
                        "name": "startBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to start searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to stop searching for transactions",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sort",
                        "required": false,
                        "in": "query",
                        "description": "Sorting preference, use asc to sort by ascending and desc to sort by descending",
                        "schema": {
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanAccountErc1155TokenTransferResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/log-address": {
            "get": {
                "operationId": "ScanLogAddress",
                "summary": "",
                "description": "Returns the event logs from an address, with optional filtering by block range.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to start searching for logs",
                        "example": "18762929",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "toBlock",
                        "required": false,
                        "in": "query",
                        "description": "The integer block number to stop searching for logs",
                        "example": "18762929",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page. Limited to 1000 records per query, use the page parameter for subsequent records",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanLogAddressResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/log-by-topics": {
            "get": {
                "operationId": "ScanLogTopics",
                "summary": "",
                "description": "Returns the events log in a block range, filtered by topics.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "fromBlock",
                        "required": true,
                        "in": "query",
                        "description": "The integer block number to start searching for logs",
                        "example": "18764300",
                        "schema": {
                            "default": "18764300",
                            "type": "number"
                        }
                    },
                    {
                        "name": "toBlock",
                        "required": true,
                        "in": "query",
                        "description": "The integer block number to stop searching for logs",
                        "example": "18764400",
                        "schema": {
                            "default": "18764400",
                            "type": "number"
                        }
                    },
                    {
                        "name": "topic0",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "example": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                        "schema": {
                            "default": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic1",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "example": "0x00000000000000000000000021a31ee1afc51d94c2efccaa2092ad1028285549",
                        "schema": {
                            "default": "0x00000000000000000000000021a31ee1afc51d94c2efccaa2092ad1028285549",
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic2",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic3",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic0_1_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {
                            "enum": [
                                "or",
                                "and"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic1_2_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operators between topics",
                        "example": "and",
                        "schema": {
                            "enum": [
                                "or",
                                "and"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic2_3_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {
                            "enum": [
                                "or",
                                "and"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic0_2_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {
                            "enum": [
                                "or",
                                "and"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic0_3_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {
                            "enum": [
                                "or",
                                "and"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic1_3_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {
                            "enum": [
                                "or",
                                "and"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page. Limited to 1000 records per query, use the page parameter for subsequent records",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanLogTopicsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/log-by-address-filtered-topics": {
            "get": {
                "operationId": "ScanLogAddressByTopic",
                "summary": "",
                "description": "Returns the event logs from an address, filtered by topics and block range.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                        "schema": {
                            "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromBlock",
                        "required": true,
                        "in": "query",
                        "description": "The integer block number to start searching for logs",
                        "example": "18762929",
                        "schema": {
                            "default": "18762929",
                            "type": "number"
                        }
                    },
                    {
                        "name": "toBlock",
                        "required": true,
                        "in": "query",
                        "description": "The integer block number to stop searching for logs",
                        "example": "18762929",
                        "schema": {
                            "default": "18762929",
                            "type": "number"
                        }
                    },
                    {
                        "name": "topic0",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "example": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic1",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic2",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic3",
                        "required": false,
                        "in": "query",
                        "description": "For a single topic, specify the topic number such as topic0, topic1, topic2, topic3",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "topic0_1_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {}
                    },
                    {
                        "name": "topic1_2_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {}
                    },
                    {
                        "name": "topic2_3_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {}
                    },
                    {
                        "name": "topic0_2_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {}
                    },
                    {
                        "name": "topic0_3_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {}
                    },
                    {
                        "name": "topic1_3_opr",
                        "required": false,
                        "in": "query",
                        "description": "For multiple topics, specify the operator between topics",
                        "schema": {}
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "The integer page number, if pagination is enabled",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The number of transactions displayed per page. Limited to 1000 records per query, use the page parameter for subsequent records",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "example": null,
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanLogAddressByTopicResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/contract-abi": {
            "get": {
                "operationId": "ScanContractAbi",
                "summary": "",
                "description": "Returns the Contract Application Binary Interface ( ABI ) of a verified smart contract.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "address",
                        "required": true,
                        "in": "query",
                        "description": "The address to query.",
                        "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                        "schema": {
                            "default": "0x60e4d786628fea6478f785a6d7e704777c86a7c6",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanContractAbiResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/contract-source-code": {
            "get": {
                "operationId": "ScanContractSourceCode",
                "summary": "",
                "description": "Returns the Solidity source code of a verified smart contract.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The contract address to query.",
                        "example": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "default": "0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanContractSourceCodeResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/contract-creation": {
            "get": {
                "operationId": "ScanContractCreation",
                "summary": "",
                "description": "Returns a contract's deployer address and transaction hash it was created, up to 5 at a time.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddresses",
                        "required": true,
                        "in": "query",
                        "description": "List of addresses to query (comma seperated. Max 5)",
                        "example": "0x60e4d786628fea6478f785a6d7e704777c86a7c6,0x81Ae0bE3A8044772D04F32398bac1E1B4B215aa8",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanContractCreationResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/contract-verify-source-code": {
            "post": {
                "operationId": "ScanContractVerifyStatus",
                "summary": "",
                "description": "Submits a contract source code to Etherscan for verification.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScanContractVerifyStatusBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanContractVerifyStatusResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/scan/contract-verify-proxy": {
            "get": {
                "operationId": "ScanContractVerifyProxyContract",
                "summary": "",
                "description": "Submits a proxy contract source code to Etherscan for verification.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                137,
                                42161,
                                421614,
                                42170,
                                43113,
                                43114,
                                56
                            ],
                            "type": "number"
                        }
                    },
                    {
                        "name": "contractAddress",
                        "required": true,
                        "in": "query",
                        "description": "The contract address to query.",
                        "example": "0x78D66878a3C2C1D42594C67c647d341bB1F932E8",
                        "schema": {
                            "default": "0x78D66878a3C2C1D42594C67c647d341bB1F932E8",
                            "type": "string"
                        }
                    },
                    {
                        "name": "includeRaw",
                        "required": false,
                        "in": "query",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "EtherScan",
                                "BscScan",
                                "PolygonScan",
                                "ArbiScan",
                                "Snowtrace",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScanContractVerifyProxyContractResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scan"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/json-rpc": {
            "post": {
                "operationId": "JsonRpc",
                "summary": "",
                "description": "Stateless, lightweight, remote procedure call (RPC) protocol that is commonly used when interacting with chain.",
                "parameters": [
                    {
                        "name": "chainId",
                        "required": true,
                        "in": "query",
                        "description": "Unique identifier for a blockchain network.",
                        "example": 1,
                        "schema": {
                            "default": 1,
                            "enum": [
                                1,
                                10,
                                100,
                                10200,
                                1088,
                                1101,
                                11124,
                                11155111,
                                11155420,
                                122,
                                137,
                                151,
                                1666600000,
                                17000,
                                1946,
                                204,
                                2222,
                                23888,
                                2442,
                                248,
                                250,
                                2741,
                                2810,
                                2818,
                                288,
                                324,
                                397,
                                4157,
                                42161,
                                42170,
                                42220,
                                43113,
                                43114,
                                4689,
                                5000,
                                534351,
                                534352,
                                545,
                                56,
                                5611,
                                59141,
                                59144,
                                7000,
                                7001,
                                7070,
                                747,
                                7887,
                                80002,
                                80084,
                                80094,
                                81457,
                                8217,
                                8453,
                                84532,
                                9001,
                                97,
                                98865,
                                "celestia",
                                "osmosis",
                                "pokt",
                                "solana",
                                "solana-devnet",
                                "starknet",
                                "sui"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Infura",
                                "Tatum",
                                "QuickNode",
                                "BlockDaemon",
                                "Helius",
                                "Pokt",
                                "Nodies",
                                "Uniblock",
                                "AutoRoute"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "A single JSON-RPC request or an array of JSON-RPC requests.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/JsonRpcBodyDto"
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/JsonRpcBodyDto"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonRpcResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "JSON-RPC"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/webhook/{id}": {
            "get": {
                "operationId": "GetWebhook",
                "summary": "",
                "description": "Get a webhook.",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            },
            "patch": {
                "operationId": "EditWebhook",
                "summary": "",
                "description": "Edit an existing webhook.",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Id of the webhook to edit.",
                        "example": "ba8eea63-9354-42f5-8268-03483a7f1df5",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWebhookBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            },
            "delete": {
                "operationId": "DeleteWebhook",
                "summary": "",
                "description": "Delete a webhook.",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/webhook": {
            "get": {
                "operationId": "GetAllWebhooks",
                "summary": "",
                "description": "Get all webhooks.",
                "parameters": [
                    {
                        "name": "provider",
                        "required": false,
                        "in": "query",
                        "description": "Provider of webhook service.",
                        "example": "Alchemy",
                        "schema": {
                            "enum": [
                                "Alchemy",
                                "Moralis",
                                "Tatum",
                                "SimpleHash",
                                "Helius"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/webhook/contract-event": {
            "post": {
                "operationId": "CreateContractEventWebhook",
                "summary": "",
                "description": "Create a contract event driven webhook.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContractEventWebhookBody"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/webhook/address-activity": {
            "post": {
                "operationId": "CreateAddressActivityWebhook",
                "summary": "",
                "description": "Create an address activity driven webhook.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAddressActivityWebhook"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/webhook/solana-address-activity": {
            "post": {
                "operationId": "CreateSolanaAddressActivityWebhook",
                "summary": "",
                "description": "Create an address activity driven webhook.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSolanaAddressActivityWebhook"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        },
        "/webhook/simplehash": {
            "post": {
                "operationId": "CreateSimpleHashWebhook",
                "summary": "",
                "description": "Create SimpleHash webhook.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSimpleHashWebhook"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Webhook"
                ],
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {}
                ]
            }
        }
    },
    "info": {
        "title": "Unified Request",
        "description": "One API for all your web3 needs.",
        "version": "1.0",
        "contact": {}
    },
    "tags": [],
    "servers": [
        {
            "url": "https://api.uniblock.dev/uni/v1",
            "description": "Gateway"
        }
    ],
    "components": {
        "schemas": {
            "TokenMetadataResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "object",
                        "example": "Tether"
                    },
                    "symbol": {
                        "type": "object",
                        "example": "USDT"
                    },
                    "logo": {
                        "type": "object",
                        "example": "https://static.alchemyapi.io/images/assets/825.png"
                    },
                    "decimals": {
                        "type": "object",
                        "example": "6"
                    }
                },
                "required": [
                    "name",
                    "symbol",
                    "logo",
                    "decimals"
                ]
            },
            "WalletTokenBalanceResponseItem": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                    },
                    "balance": {
                        "type": "string",
                        "example": "199999999999"
                    },
                    "name": {
                        "type": "object",
                        "example": "Ethereum"
                    },
                    "symbol": {
                        "type": "object",
                        "example": "ETH"
                    },
                    "logo": {
                        "type": "object",
                        "example": "https://assets.coingecko.com/coins/images/279/large/ethereum.png"
                    },
                    "decimals": {
                        "type": "object",
                        "example": "18"
                    }
                },
                "required": [
                    "contractAddress",
                    "balance",
                    "name",
                    "symbol",
                    "logo",
                    "decimals"
                ]
            },
            "WalletTokenBalanceResponse": {
                "type": "object",
                "properties": {
                    "balances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletTokenBalanceResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "balances",
                    "cursor"
                ]
            },
            "WalletTokenHistoricalBalanceResponse": {
                "type": "object",
                "properties": {
                    "balances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletTokenBalanceResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    },
                    "blockNumber": {
                        "type": "string",
                        "example": "17941778"
                    },
                    "timestamp": {
                        "type": "string",
                        "example": "17941778"
                    }
                },
                "required": [
                    "balances",
                    "cursor",
                    "blockNumber",
                    "timestamp"
                ]
            },
            "TokenPriceResponse": {
                "type": "object",
                "properties": {
                    "usdPrice": {
                        "type": "object",
                        "example": "1.001"
                    },
                    "name": {
                        "type": "object",
                        "example": "Tether"
                    },
                    "symbol": {
                        "type": "object",
                        "example": "USDT"
                    },
                    "address": {
                        "type": "object",
                        "example": "0x..."
                    },
                    "decimals": {
                        "type": "object",
                        "example": "6"
                    },
                    "logo": {
                        "type": "object",
                        "example": "https://static.alchemyapi.io/images/assets/825.png"
                    },
                    "exchangeName": {
                        "type": "object",
                        "example": "uniswap"
                    },
                    "exchangeAddress": {
                        "type": "string",
                        "example": "0x..."
                    },
                    "updatedAt": {
                        "type": "object",
                        "example": "2023-05-20T02:58:53.987519619Z"
                    }
                },
                "required": [
                    "usdPrice",
                    "name",
                    "symbol",
                    "address",
                    "decimals",
                    "logo",
                    "exchangeName",
                    "exchangeAddress",
                    "updatedAt"
                ]
            },
            "TokenHistoricPriceResponse": {
                "type": "object",
                "properties": {
                    "usdPrice": {
                        "type": "object",
                        "example": "1.001"
                    },
                    "name": {
                        "type": "object",
                        "example": "Tether"
                    },
                    "symbol": {
                        "type": "object",
                        "example": "USDT"
                    },
                    "address": {
                        "type": "object",
                        "example": "0x..."
                    },
                    "decimals": {
                        "type": "object",
                        "example": "6"
                    },
                    "logo": {
                        "type": "object",
                        "example": "https://static.alchemyapi.io/images/assets/825.png"
                    },
                    "exchangeName": {
                        "type": "object",
                        "example": "uniswap"
                    },
                    "exchangeAddress": {
                        "type": "string",
                        "example": "0x..."
                    },
                    "updatedAt": {
                        "type": "object",
                        "example": "2023-05-20T02:58:53.987519619Z"
                    },
                    "blockNumber": {
                        "type": "string",
                        "example": "17941778"
                    },
                    "timestamp": {
                        "type": "object",
                        "example": "1692651613"
                    }
                },
                "required": [
                    "usdPrice",
                    "name",
                    "symbol",
                    "address",
                    "decimals",
                    "logo",
                    "exchangeName",
                    "exchangeAddress",
                    "updatedAt",
                    "blockNumber",
                    "timestamp"
                ]
            },
            "WalletTokenTransfersResponseItem": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                    },
                    "name": {
                        "type": "string",
                        "example": "OMGToken"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "OMG"
                    },
                    "decimals": {
                        "type": "string",
                        "example": "18"
                    },
                    "logo": {
                        "type": "string",
                        "example": ""
                    },
                    "fromAddress": {
                        "type": "string",
                        "example": "0x426b99c64366a1529e8d038a4d7a619b52b66c05"
                    },
                    "toAddress": {
                        "type": "string",
                        "example": "0xb19b920783312592beddd4bea5a2c3a4cd14fed5"
                    },
                    "blockHash": {
                        "type": "string",
                        "example": "0xd863533685cc120db134ef6ecf6758c35225c920600e976ed2a617045421a005"
                    },
                    "blockNumber": {
                        "type": "string",
                        "example": "11381701"
                    },
                    "blockTimestamp": {
                        "type": "string",
                        "example": "2020-12-03T19:58:23.000Z"
                    },
                    "transactionHash": {
                        "type": "string",
                        "example": "0x4cd79c370728e02cd8c385881c24360052fff1d59d6d2cefb7fdf09234c89e2b"
                    },
                    "amount": {
                        "type": "string",
                        "example": "14861516210000000000"
                    }
                },
                "required": [
                    "contractAddress",
                    "name",
                    "symbol",
                    "decimals",
                    "logo",
                    "fromAddress",
                    "toAddress",
                    "blockHash",
                    "blockNumber",
                    "blockTimestamp",
                    "transactionHash",
                    "amount"
                ]
            },
            "WalletTokenTransfersResponse": {
                "type": "object",
                "properties": {
                    "transfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletTokenTransfersResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "transfers",
                    "cursor"
                ]
            },
            "WalletTokenAllowancesResponseItem": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "example": "0xcedefe438860d2789da6419b3a19cece2a41038d"
                    },
                    "name": {
                        "type": "string",
                        "example": "Love Hate Inu"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "LHINU"
                    },
                    "decimals": {
                        "type": "string",
                        "example": "18"
                    },
                    "fromAddress": {
                        "type": "string",
                        "example": "0x297bfcb2b91282dd640c17f4a72dc45f4a5a39a9"
                    },
                    "toAddress": {
                        "type": "string",
                        "example": "0x378e116f28c5fb37988d4c06f0eff4c7669b7afe"
                    },
                    "amount": {
                        "type": "string",
                        "example": "99924138000000000000000000"
                    }
                },
                "required": [
                    "contractAddress",
                    "name",
                    "symbol",
                    "decimals",
                    "fromAddress",
                    "toAddress",
                    "amount"
                ]
            },
            "WalletTokenAllowancesResponse": {
                "type": "object",
                "properties": {
                    "allowances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletTokenAllowancesResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "allowances",
                    "cursor"
                ]
            },
            "WalletTokenActivityQueryDto": {
                "type": "object",
                "properties": {
                    "walletAddress": {
                        "type": "string",
                        "description": "The address of the wallet to query.",
                        "example": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9",
                        "default": "0x8D97689C9818892B700e27F316cc3E41e17fBeb9"
                    },
                    "cursor": {
                        "type": "string",
                        "description": "Cursor from previous query to get next page of results."
                    },
                    "provider": {
                        "type": "string",
                        "description": "Specify which provider to use. The project's provider priority list is used by default if no providers are selected. (Priority list can be managed on Uniblock's dashboard)",
                        "enum": [
                            "Covalent",
                            "AutoRoute"
                        ]
                    },
                    "includeRaw": {
                        "type": "boolean",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null
                    }
                },
                "required": [
                    "walletAddress"
                ]
            },
            "FilterValues": {
                "type": "object",
                "properties": {
                    "gt": {
                        "type": "string",
                        "description": "Greater than"
                    },
                    "lt": {
                        "type": "string",
                        "description": "Less than"
                    },
                    "gte": {
                        "type": "string",
                        "description": "Greater than or equals"
                    },
                    "lte": {
                        "type": "string",
                        "description": "Less than or equals"
                    },
                    "equals": {
                        "type": "string",
                        "description": "Equals"
                    }
                }
            },
            "MarketDataPriceResponse": {
                "type": "object",
                "properties": {}
            },
            "MarketDataMarketCapResponse": {
                "type": "object",
                "properties": {}
            },
            "MarketData24hVolumeResponse": {
                "type": "object",
                "properties": {}
            },
            "MarketDataHistoryResponseItem": {
                "type": "object",
                "properties": {}
            },
            "MarketDataHistoryResponse": {
                "type": "object",
                "properties": {
                    "currentPrice": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketDataHistoryResponseItem"
                        }
                    },
                    "marketCap": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketDataHistoryResponseItem"
                        }
                    },
                    "volume": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketDataHistoryResponseItem"
                        }
                    }
                },
                "required": [
                    "currentPrice",
                    "marketCap",
                    "volume"
                ]
            },
            "MarketDataMarketChartRangeResponse": {
                "type": "object",
                "properties": {}
            },
            "MarketDataMarketChartPriceRangeResponse": {
                "type": "object",
                "properties": {}
            },
            "MarketDataTrendingTokensResponseItem": {
                "type": "object",
                "properties": {}
            },
            "MarketDataTrendingTokensResponse": {
                "type": "object",
                "properties": {
                    "coins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketDataTrendingTokensResponseItem"
                        }
                    }
                },
                "required": [
                    "coins"
                ]
            },
            "NFTMetadata": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "CyrptoMexa #372"
                    },
                    "description": {
                        "type": "string",
                        "example": "CryptoMexas are the sixth edition in the CryptoCitizens collection, an ongoing generative portrait series based on real people from communities around the world. Holders of CryptoCitizens are members of the Bright Moments DAO."
                    },
                    "image": {
                        "type": "string",
                        "example": "https://media-proxy.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372.png"
                    },
                    "traits": {
                        "example": "[\\n          {\\n            'value': 'All CryptoMexas',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'Body: Dark',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'City: CDMX',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'Gear: Vihuela',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'Bodywear: Charro Suit',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'Facewear: Red Shades',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'Footwear: Black Shoes',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'Headwear: White Cap',\\n            'trait_type': 'CryptoMexa'\\n          },\\n          {\\n            'value': 'Background: Avenida c1lvaro Obregf3n',\\n            'trait_type': 'CryptoMexa'\\n          }\\n        ]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "description",
                    "image",
                    "traits"
                ]
            },
            "WalletNFTBalanceResponseItem": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "example": "0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0"
                    },
                    "name": {
                        "type": "object",
                        "example": "CryptoCitizens"
                    },
                    "symbol": {
                        "type": "object",
                        "example": "CITIZEN"
                    },
                    "ercType": {
                        "type": "object",
                        "example": "ERC721"
                    },
                    "tokenId": {
                        "type": "string",
                        "example": "5000372"
                    },
                    "tokenURI": {
                        "type": "object",
                        "example": "http://token.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372"
                    },
                    "amount": {
                        "type": "object",
                        "example": "1"
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTMetadata"
                        }
                    },
                    "rawMetadata": {
                        "type": "string",
                        "example": "{'aspect_ratio':1,'traits':[{'value':'All CryptoMexas','trait_type':'CryptoMexa'},{'value':'Body: Dark','trait_type':'CryptoMexa'},{'value':'City: CDMX','trait_type':'CryptoMexa'},{'value':'Gear: Vihuela','trait_type':'CryptoMexa'},{'value':'Bodywear: Charro Suit','trait_type':'CryptoMexa'},{'value':'Facewear: Red Shades','trait_type':'CryptoMexa'},{'value':'Footwear: Black Shoes','trait_type':'CryptoMexa'},{'value':'Headwear: White Cap','trait_type':'CryptoMexa'},{'value':'Background: Avenida c1lvaro Obregfn','trait_type':'CryptoMexa'}],'tokenID':'5000372','generator_url':'https: //generator.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372','artist':'Qian Qian','description':'CryptoMexas are the sixth edition in the CryptoCitizens collection, an ongoing generative portrait series based on real people from communities around the world. Holders of CryptoCitizens are members of the Bright Moments DAO.','preview_asset_url':'https://media-proxy.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372.png','platform':'CryptoCitizens','features':{'Background':'Avenida c1lvaro Obregf3n','Bodywear':'Charro Suit','Footwear':'Black Shoes','Headwear':'White Cap','Facewear':'Red Shades','City':'CDMX','Body':'Dark','Gear':'Vihuela'},'external_url':'','payout_address':'0xe79e97c3e7990672c3d45c46714ef748dd0ea7df','token_hash':'0xc290d582815ba978115cc3bfdd547bf39e11f548f6e72a8461166c29eaeed7e3','project_id':'5','is_static':false,'primary_asset_url':'https://generator.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372','image':'https://media-proxy.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372.png','animation_url':'https://generator.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372','website':'https://brightmoments.io','royaltyInfo':{'additionalPayeePercentage':50,'artistAddress':'0xb96e81f80b3aeef65cb6d0e280b15fd5dbe71937','additionalPayee':'0x8fcc2dc884ed69b12d31c11363f2ff532bfec350','royaltyFeeByID':5},'license':'NIFTY','engine_type':'fullyonchain','series':'N/A','name':'CryptoMexa #372','minted':true,'script_type':'tone@14.8.15','collection_name':'CryptoMexa by Qian Qian'}"
                    },
                    "cachedImage": {
                        "type": "object",
                        "example": "https://cdn.simplehash.com/assets/383ae90349efc3f992d7e23ac35c7d8f8e09362f14acb9750192e92fcbde323f.png"
                    }
                },
                "required": [
                    "contractAddress",
                    "name",
                    "symbol",
                    "ercType",
                    "tokenId",
                    "tokenURI",
                    "amount",
                    "metadata",
                    "rawMetadata",
                    "cachedImage"
                ]
            },
            "WalletNFTBalanceResponse": {
                "type": "object",
                "properties": {
                    "balances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletNFTBalanceResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "balances",
                    "cursor"
                ]
            },
            "NFTInCollectionResponseItem": {
                "type": "object",
                "properties": {
                    "tokenId": {
                        "type": "string",
                        "example": "1"
                    },
                    "tokenURI": {
                        "type": "string",
                        "example": "http://token.artblocks.io/0xbdde08bd57e5c9fd563ee7ac61618cb2ecdc0ce0/5000372"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "example": "2023-04-25T22:17:00.509Z"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/NFTMetadata"
                    },
                    "rawMetadata": {
                        "type": "string",
                        "example": "{'name':'Dreadfulz #0','description':'7,777 Dreadfulz have inked their name in fealty to the Grand Inquisitor. Bound by avarice, lustful for $DREAD.','image':'https://ipfs.io/ipfs/QmZbxmneJTMFfa8SXpv8QweHi34CUMU4LpuPH5UVNvrAbG/0.jpg','external_url':'','attributes':[{'value':'Legendary','trait_type':'DIVISION'}],'properties':{'category':'image','files':[{'type':'image/png','uri':'0.png'}],'creators':[]}}"
                    }
                },
                "required": [
                    "tokenId",
                    "tokenURI",
                    "lastUpdated",
                    "metadata",
                    "rawMetadata"
                ]
            },
            "NFTInCollectionResponse": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "object",
                        "example": "0x81ae0be3a8044772d04f32398bac1e1b4b215aa8"
                    },
                    "contractType": {
                        "type": "object",
                        "example": "ERC721"
                    },
                    "contractName": {
                        "type": "object",
                        "example": "Dreadfulz"
                    },
                    "contractSymbol": {
                        "type": "object",
                        "example": "Dreadfulz"
                    },
                    "nfts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTInCollectionResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "contractAddress",
                    "contractType",
                    "contractName",
                    "contractSymbol",
                    "nfts",
                    "cursor"
                ]
            },
            "WalletNFTTransferResponseItem": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "example": "0x18a808dd312736fc75eb967fc61990af726f04e4"
                    },
                    "tokenId": {
                        "type": "string",
                        "example": "18"
                    },
                    "amount": {
                        "type": "string",
                        "example": "1"
                    },
                    "blockNumber": {
                        "type": "string",
                        "example": "13062953"
                    },
                    "transactionHash": {
                        "type": "string",
                        "example": "0xd89b54cb5aca6f501d43ee3363dcc892d31d1c185c9059c22d686ca0a1b93314"
                    },
                    "fromAddress": {
                        "type": "string",
                        "example": "0x0000000000000000000000000000000000000000"
                    },
                    "toAddress": {
                        "type": "string",
                        "example": "0x5c43b1ed97e52d009611d89b74fa829fe4ac56b1"
                    },
                    "contractType": {
                        "type": "string",
                        "example": "ERC721"
                    },
                    "timestamp": {
                        "type": "string",
                        "example": ""
                    },
                    "name": {
                        "type": "string",
                        "example": "BurnyBoy"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "BURN"
                    }
                },
                "required": [
                    "contractAddress",
                    "tokenId",
                    "amount",
                    "blockNumber",
                    "transactionHash",
                    "fromAddress",
                    "toAddress",
                    "contractType",
                    "timestamp",
                    "name",
                    "symbol"
                ]
            },
            "NFTTransfersByWalletResponse": {
                "type": "object",
                "properties": {
                    "transfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletNFTTransferResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "transfers",
                    "cursor"
                ]
            },
            "NFTTransfersByNftResponseItem": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "example": "0x18a808dd312736fc75eb967fc61990af726f04e4"
                    },
                    "tokenId": {
                        "type": "string",
                        "example": "18"
                    },
                    "amount": {
                        "type": "string",
                        "example": "1"
                    },
                    "blockNumber": {
                        "type": "string",
                        "example": "13062953"
                    },
                    "transactionHash": {
                        "type": "string",
                        "example": "0xd89b54cb5aca6f501d43ee3363dcc892d31d1c185c9059c22d686ca0a1b93314"
                    },
                    "fromAddress": {
                        "type": "string",
                        "example": "0x0000000000000000000000000000000000000000"
                    },
                    "toAddress": {
                        "type": "string",
                        "example": "0x5c43b1ed97e52d009611d89b74fa829fe4ac56b1"
                    },
                    "contractType": {
                        "type": "string",
                        "example": "ERC721"
                    },
                    "timestamp": {
                        "type": "string",
                        "example": ""
                    },
                    "name": {
                        "type": "string",
                        "example": "BurnyBoy"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "BURN"
                    }
                },
                "required": [
                    "contractAddress",
                    "tokenId",
                    "amount",
                    "blockNumber",
                    "transactionHash",
                    "fromAddress",
                    "toAddress",
                    "contractType",
                    "timestamp",
                    "name",
                    "symbol"
                ]
            },
            "NFTTransfersByNftResponse": {
                "type": "object",
                "properties": {
                    "transfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTTransfersByNftResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "transfers",
                    "cursor"
                ]
            },
            "PassthroughResponse": {
                "type": "object",
                "properties": {
                    "res": {
                        "type": "object",
                        "example": "Uniblock to the Moon!"
                    }
                },
                "required": [
                    "res"
                ]
            },
            "NFTTransfersByCollectionIdResponse": {
                "type": "object",
                "properties": {
                    "transfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PassthroughResponse"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "SCH_MTcxNDY1NTkwMzAwMDAxOTc4MjY4NzAwMDAwMDAyNzIwMDAwMDAwMDAwXzB4YTI4MzM5YmNhZjMwMGM1ODIwNzdlNjhkYTVkMWIyYjlkMTkyZDcxOGQ4ZDQ0Mzg2ZjEw=="
                    }
                },
                "required": [
                    "transfers",
                    "cursor"
                ]
            },
            "NFTCollectionMetadataResponse": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The contract address of the NFT collection.",
                        "example": "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the NFT collection.",
                        "example": "CRYPTOPUNKS"
                    },
                    "symbol": {
                        "type": "string",
                        "description": "The symbol of the NFT collection.",
                        "example": "Ͼ"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the token.",
                        "example": "ERC721"
                    }
                },
                "required": [
                    "address",
                    "name",
                    "symbol",
                    "type"
                ]
            },
            "NFTCollectionMetadataByCollectionIdResponse": {
                "type": "object",
                "properties": {
                    "collections": {
                        "description": "Collection Metadata for the queried collections",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PassthroughResponse"
                        }
                    }
                },
                "required": [
                    "collections"
                ]
            },
            "NFTCollectionTraitsResponseItem": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the trait.",
                        "example": "Background"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "NFTCollectionTraitsResponse": {
                "type": "object",
                "properties": {
                    "traits": {
                        "description": "The traits of the NFT collection.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTCollectionTraitsResponseItem"
                        }
                    }
                },
                "required": [
                    "traits"
                ]
            },
            "NFTCollectionRarityAttributeItem": {
                "type": "object",
                "properties": {
                    "attribute_name": {
                        "type": "string",
                        "description": "The name of the attribute.",
                        "example": "Background"
                    },
                    "count": {
                        "type": "string",
                        "description": "The count of the attribute.",
                        "example": "Red"
                    }
                },
                "required": [
                    "attribute_name",
                    "count"
                ]
            },
            "NFTCollectionRarityResponseItem": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the trait.",
                        "example": "Background"
                    },
                    "token_count": {
                        "type": "string",
                        "description": "The token count of the trait's attributes.",
                        "example": "10"
                    },
                    "trait_percentage": {
                        "type": "string",
                        "description": "The percentage of the trait's attributes.",
                        "example": "10"
                    },
                    "attributes": {
                        "description": "The attributes of the trait.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTCollectionRarityAttributeItem"
                        }
                    }
                },
                "required": [
                    "name",
                    "attributes"
                ]
            },
            "NFTCollectionRarityResponse": {
                "type": "object",
                "properties": {
                    "traits": {
                        "description": "The traits of the NFT collection.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTCollectionRarityResponseItem"
                        }
                    }
                },
                "required": [
                    "traits"
                ]
            },
            "NFTTraitAttributesItem": {
                "type": "object",
                "properties": {
                    "attribute_name": {
                        "type": "string",
                        "description": "The name of the attribute.",
                        "example": "Background"
                    },
                    "count": {
                        "type": "string",
                        "description": "The count of the attribute.",
                        "example": "Red"
                    }
                },
                "required": [
                    "attribute_name",
                    "count"
                ]
            },
            "NFTTraitAttributesResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the trait.",
                        "example": "Background"
                    },
                    "attributes": {
                        "description": "The attributes of the trait.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTTraitAttributesItem"
                        }
                    }
                },
                "required": [
                    "name",
                    "attributes"
                ]
            },
            "NFTCollectionVolumesMarketCapsResponseItem": {
                "type": "object",
                "properties": {
                    "collectionId": {
                        "type": "string",
                        "example": "510139ec0d8cf5513d59a8d3afa1c061"
                    },
                    "name": {
                        "type": "string",
                        "example": "Doodles Original Collection"
                    },
                    "1DayVolume": {
                        "type": "number",
                        "example": 55151100000000000000
                    },
                    "1DayVolumeUsdCents": {
                        "type": "number",
                        "example": 12284066
                    },
                    "1DayPriorVolume": {
                        "type": "number",
                        "example": 82817699000000000000
                    },
                    "1DayPriorVolumeUsdCents": {
                        "type": "number",
                        "example": 18567392
                    },
                    "1DayVolumeChangePercent": {
                        "type": "number",
                        "example": -33.41
                    },
                    "1DayTransactionCount": {
                        "type": "number",
                        "example": 28
                    },
                    "1DaySellerCount": {
                        "type": "number",
                        "example": 28
                    },
                    "1DayBuyerCount": {
                        "type": "number",
                        "example": 28
                    },
                    "1DayTraderCount": {
                        "type": "number",
                        "example": 100
                    },
                    "7DayVolume": {
                        "type": "number",
                        "example": 7000
                    },
                    "7DayVolumeUsdCents": {
                        "type": "number",
                        "example": 700000
                    },
                    "7DayPriorVolume": {
                        "type": "number",
                        "example": 6000
                    },
                    "7DayPriorVolumeUsdCents": {
                        "type": "number",
                        "example": 600000
                    },
                    "7DayVolumeChangePercent": {
                        "type": "number",
                        "example": 10
                    },
                    "7DayTransactionCount": {
                        "type": "number",
                        "example": 500
                    },
                    "7DaySellerCount": {
                        "type": "number",
                        "example": 200
                    },
                    "7DayBuyerCount": {
                        "type": "number",
                        "example": 300
                    },
                    "7DayTraderCount": {
                        "type": "number",
                        "example": 400
                    },
                    "30DayVolume": {
                        "type": "number",
                        "example": 10000
                    },
                    "30DayVolumeUsdCents": {
                        "type": "number",
                        "example": 1000000
                    },
                    "30DayPriorVolume": {
                        "type": "number",
                        "example": 9000
                    },
                    "30DayPriorVolumeUsdCents": {
                        "type": "number",
                        "example": 900000
                    },
                    "30DayVolumeChangePercent": {
                        "type": "number",
                        "example": 11
                    },
                    "30DayTransactionCount": {
                        "type": "number",
                        "example": 2000
                    },
                    "30DaySellerCount": {
                        "type": "number",
                        "example": 1000
                    },
                    "30DayBuyerCount": {
                        "type": "number",
                        "example": 1000
                    },
                    "30DayTraderCount": {
                        "type": "number",
                        "example": 2000
                    },
                    "90DayVolume": {
                        "type": "number",
                        "example": 40000
                    },
                    "90DayVolumeUsdCents": {
                        "type": "number",
                        "example": 4000000
                    },
                    "90DayTransactionCount": {
                        "type": "number",
                        "example": 8000
                    },
                    "90DaySellerCount": {
                        "type": "number",
                        "example": 4000
                    },
                    "90DayBuyerCount": {
                        "type": "number",
                        "example": 4000
                    },
                    "90DayTraderCount": {
                        "type": "number",
                        "example": 8000
                    },
                    "allTimeVolume": {
                        "type": "number",
                        "example": 100000
                    },
                    "marketCap": {
                        "type": "number",
                        "example": 5000000
                    },
                    "marketCapUsdCents": {
                        "type": "number",
                        "example": 500000000
                    },
                    "paymentToken": {
                        "type": "object",
                        "example": {
                            "paymentTokenId": "1",
                            "name": "Ethereum",
                            "symbol": "ETH",
                            "address": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
                            "decimals": 18
                        }
                    },
                    "collectionDetails": {
                        "type": "object",
                        "description": "The details of the collection"
                    }
                },
                "required": [
                    "collectionId",
                    "name",
                    "1DayVolume",
                    "1DayVolumeUsdCents",
                    "1DayPriorVolume",
                    "1DayPriorVolumeUsdCents",
                    "1DayVolumeChangePercent",
                    "1DayTransactionCount",
                    "1DaySellerCount",
                    "1DayBuyerCount",
                    "1DayTraderCount",
                    "7DayVolume",
                    "7DayVolumeUsdCents",
                    "7DayPriorVolume",
                    "7DayPriorVolumeUsdCents",
                    "7DayVolumeChangePercent",
                    "7DayTransactionCount",
                    "7DaySellerCount",
                    "7DayBuyerCount",
                    "7DayTraderCount",
                    "30DayVolume",
                    "30DayVolumeUsdCents",
                    "30DayPriorVolume",
                    "30DayPriorVolumeUsdCents",
                    "30DayVolumeChangePercent",
                    "30DayTransactionCount",
                    "30DaySellerCount",
                    "30DayBuyerCount",
                    "30DayTraderCount",
                    "90DayVolume",
                    "90DayVolumeUsdCents",
                    "90DayTransactionCount",
                    "90DaySellerCount",
                    "90DayBuyerCount",
                    "90DayTraderCount",
                    "allTimeVolume",
                    "marketCap",
                    "marketCapUsdCents",
                    "paymentToken",
                    "collectionDetails"
                ]
            },
            "NFTCollectionVolumesMarketCapsResponse": {
                "type": "object",
                "properties": {
                    "collections": {
                        "description": "Volume and Market Cap information for the queried collections",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTCollectionVolumesMarketCapsResponseItem"
                        }
                    }
                },
                "required": [
                    "collections"
                ]
            },
            "NFTCollectionTopCollectorsByCollectionIdResponseItem": {
                "type": "object",
                "properties": {
                    "owner_address": {
                        "type": "string",
                        "description": "The owner address of the NFT Collector.",
                        "example": "0x620b70123fB810F6C653DA7644b5dD0b6312e4D8"
                    },
                    "owner_ens_name": {
                        "type": "object",
                        "description": "The ENS name of the owner.",
                        "example": "alice.eth"
                    },
                    "owner_image": {
                        "type": "object",
                        "description": "The image of the owner.",
                        "example": "https://lh3.googleusercontent.com/grIhDMKmdVFnkIpwrr953c7xMYuT88x"
                    },
                    "distinct_nfts_owned": {
                        "type": "number",
                        "description": "The total number of distinct NFTs owned by the collector.",
                        "example": 10
                    },
                    "total_copies_owned": {
                        "type": "number",
                        "description": "The total number of NFT copies owned by the collector.",
                        "example": 10
                    }
                },
                "required": [
                    "owner_address",
                    "owner_ens_name",
                    "owner_image",
                    "distinct_nfts_owned",
                    "total_copies_owned"
                ]
            },
            "NFTCollectionTopCollectorsByCollectionIdResponse": {
                "type": "object",
                "properties": {
                    "collectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTCollectionTopCollectorsByCollectionIdResponseItem"
                        }
                    },
                    "count": {
                        "type": "object",
                        "description": "The total number of collectors in the response.",
                        "example": 10
                    },
                    "cursor": {
                        "type": "string",
                        "example": "SCH_MTcxNDY1NTkwMzAwMDAxOTc4MjY4NzAwMDAwMDAyNzIwMDAwMDAwMDAwXzB4YTI4MzM5YmNhZjMwMGM1ODIwNzdlNjhkYTVkMWIyYjlkMTkyZDcxOGQ4ZDQ0Mzg2ZjEw=="
                    }
                },
                "required": [
                    "collectors",
                    "count",
                    "cursor"
                ]
            },
            "PaymentToken": {
                "type": "object",
                "properties": {
                    "payment_token_id": {
                        "type": "string",
                        "description": "The ID of the token.",
                        "example": "ethereum.native"
                    },
                    "address": {
                        "type": "object",
                        "description": "The address of the token.",
                        "example": null
                    },
                    "symbol": {
                        "type": "string",
                        "description": "The symbol of the token.",
                        "example": "ETH"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the token.",
                        "example": "Ether"
                    },
                    "decimals": {
                        "type": "number",
                        "description": "The number of decimals of the token.",
                        "example": 18
                    }
                },
                "required": [
                    "payment_token_id",
                    "address",
                    "symbol",
                    "name",
                    "decimals"
                ]
            },
            "NFTCollectionPricingHistoryByCollectionIdResponseItem": {
                "type": "object",
                "properties": {
                    "marketplace_id": {
                        "type": "string",
                        "description": "The ID of the marketplace.",
                        "example": "blur"
                    },
                    "floor_price": {
                        "type": "string",
                        "description": "The floor price of the NFT.",
                        "example": "2030000000000000000"
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "The timestamp of the floor price.",
                        "example": "2023-06-15T00:00:00Z"
                    }
                },
                "required": [
                    "marketplace_id",
                    "floor_price",
                    "timestamp"
                ]
            },
            "NFTCollectionPricingHistoryByCollectionIdResponse": {
                "type": "object",
                "properties": {
                    "payment_token": {
                        "$ref": "#/components/schemas/PaymentToken"
                    },
                    "floor_prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTCollectionPricingHistoryByCollectionIdResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "SCH_MTcxNDY1NTkwMzAwMDAxOTc4MjY4NzAwMDAwMDAyNzIwMDAwMDAwMDAwXzB4YTI4MzM5YmNhZjMwMGM1ODIwNzdlNjhkYTVkMWIyYjlkMTkyZDcxOGQ4ZDQ0Mzg2ZjEw=="
                    }
                },
                "required": [
                    "payment_token",
                    "floor_prices",
                    "cursor"
                ]
            },
            "NFTMetadataResponse": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "description": "The contract address of the NFT.",
                        "example": "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb"
                    },
                    "contractType": {
                        "type": "string",
                        "description": "The type of the contract.",
                        "example": "ERC721"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "The normalized metadata of the NFT."
                    },
                    "rawMetadata": {
                        "type": "string",
                        "description": "The raw metadata of the NFT."
                    },
                    "lastUpdated": {
                        "type": "string",
                        "description": "The time when the metadata was last updated.",
                        "example": "2023-05-24T18:14:06.556962246Z"
                    },
                    "contractMetadata": {
                        "type": "object",
                        "description": "The metadata of the contract."
                    }
                },
                "required": [
                    "contractAddress",
                    "contractType",
                    "metadata",
                    "rawMetadata",
                    "lastUpdated",
                    "contractMetadata"
                ]
            },
            "NFTMetadataByNFTIdsResponse": {
                "type": "object",
                "properties": {
                    "nfts": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "nfts"
                ]
            },
            "NFTIsAirdropResponse": {
                "type": "object",
                "properties": {
                    "isAirdrop": {
                        "type": "boolean",
                        "description": "Determines if NFT is airdropped or not.",
                        "example": "false"
                    }
                },
                "required": [
                    "isAirdrop"
                ]
            },
            "NFTFloorPriceResponse": {
                "type": "object",
                "properties": {
                    "floorPrice": {
                        "type": "number",
                        "description": "Floor price of the collection.",
                        "example": 0.767999
                    },
                    "priceCurrency": {
                        "type": "string",
                        "description": "Currency in which the floor price is denominated.",
                        "example": "ETH"
                    },
                    "collectionUrl": {
                        "type": "string",
                        "description": "Link to the collection.",
                        "example": "https://opensea.io/collection/world-of-women-nft"
                    }
                },
                "required": [
                    "floorPrice",
                    "priceCurrency",
                    "collectionUrl"
                ]
            },
            "WalletNFTHolderResponse": {
                "type": "object",
                "properties": {
                    "isHolderOfContract": {
                        "type": "boolean",
                        "description": "Wallet owns any token in given NFT contract.",
                        "example": false
                    }
                },
                "required": [
                    "isHolderOfContract"
                ]
            },
            "FeeInfo": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "example": "45937500000000000"
                    },
                    "tokenAddress": {
                        "type": "string",
                        "example": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "WETH"
                    },
                    "decimals": {
                        "type": "number",
                        "example": 18
                    }
                },
                "required": [
                    "amount",
                    "tokenAddress",
                    "symbol",
                    "decimals"
                ]
            },
            "NFTSales": {
                "type": "object",
                "properties": {
                    "marketplace": {
                        "type": "string",
                        "example": "wyvern"
                    },
                    "marketplaceAddress": {
                        "type": "string",
                        "example": "0x7Be8076f4EA4A4AD08075C2508e481d6C946D12b"
                    },
                    "contractAddress": {
                        "type": "string",
                        "example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                    },
                    "tokenId": {
                        "type": "string",
                        "example": "44"
                    },
                    "quantity": {
                        "type": "string",
                        "example": "1"
                    },
                    "buyerAddress": {
                        "type": "string",
                        "example": "0xCdC78DBE7ccbB7Ab2e07aEa18C1A6424C57ad63d"
                    },
                    "sellerAddress": {
                        "type": "string",
                        "example": "0x758070E86f10B4B7BE14f5FefEB11aEb0D3F56dE"
                    },
                    "blockNumber": {
                        "type": "number",
                        "example": "13869130"
                    },
                    "transactionHash": {
                        "type": "string",
                        "example": "0xfe2f6d1b244c0052a1bca636fed7a39a1ef04639645c8a374a22702cc08a1e01"
                    },
                    "sellerFee": {
                        "$ref": "#/components/schemas/FeeInfo"
                    },
                    "protocolFee": {
                        "$ref": "#/components/schemas/FeeInfo"
                    },
                    "royaltyFee": {
                        "$ref": "#/components/schemas/FeeInfo"
                    }
                },
                "required": [
                    "marketplace",
                    "marketplaceAddress",
                    "contractAddress",
                    "tokenId",
                    "quantity",
                    "buyerAddress",
                    "sellerAddress",
                    "blockNumber",
                    "transactionHash",
                    "sellerFee",
                    "protocolFee",
                    "royaltyFee"
                ]
            },
            "NFTSalesResponse": {
                "type": "object",
                "properties": {
                    "nftSales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTSales"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "nftSales",
                    "cursor"
                ]
            },
            "Metadata": {
                "type": "object",
                "properties": {
                    "collectionName": {
                        "type": "string",
                        "example": "BAYC Otherside Land V3"
                    },
                    "imageUrl": {
                        "type": "string",
                        "example": "https://i.seadn.io/gae/aR91WTPUmY4QBkle9qBum5dfjfCyh9n8zgYWyMAFJ-3vUUdquzasMpYyl2Jr6elxhZlPuI1gzthut99h0Z33F_k-xqev_jGldV7X?w=500&auto=format"
                    },
                    "description": {
                        "type": "string",
                        "example": "[Mint on the website](https://baycofficial.xyz)\\n\\nBAYC Otherside Land is an open world that enables users to build 3D immersive applications on top of several blockchains. In BAYC Otherside Land, users can take advantage of traditional 3D open-world features such as building 3D architectures, hosting virtual meetings, exhibiting NFTs, and more advanced functionality.Details on Twitter @BoredApeYC or PUBLIC MINT NOW LIVE!\\n"
                    },
                    "externalUrl": {
                        "type": "string",
                        "example": "https://baycofficial.xyz"
                    },
                    "twitterUsername": {
                        "type": "string",
                        "example": ""
                    },
                    "discordUrl": {
                        "type": "string",
                        "example": ""
                    },
                    "bannerImageUrl": {
                        "type": "string",
                        "example": "https://i.seadn.io/gae/hzlwc-oAkRWAvvKT4XLKTik_5prlTdKGKvKnoqD_7nfRWBENkiAhqDiMbi2xI6-4sjEY4v-KJsMsa3uJkvIVC17cb0EpcMZsswDqjw?w=500&auto=format"
                    }
                },
                "required": [
                    "collectionName",
                    "imageUrl",
                    "description",
                    "externalUrl",
                    "twitterUsername",
                    "discordUrl",
                    "bannerImageUrl"
                ]
            },
            "Contract": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "example": "0x000386E3F7559d9B6a2F5c46B4aD1A9587D59Dc3"
                    },
                    "name": {
                        "type": "string",
                        "example": "Bored Ape Nike Club"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "BANC"
                    },
                    "totalSupply": {
                        "type": "string",
                        "example": "24"
                    },
                    "tokenType": {
                        "type": "string",
                        "example": "ERC721"
                    },
                    "contractDeployer": {
                        "type": "string",
                        "example": "0x51D7D428041E23ef51422e110dfEfF906e821CFe"
                    },
                    "deployedBlockNumber": {
                        "type": "number",
                        "example": 14276343
                    },
                    "metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metadata"
                        }
                    }
                },
                "required": [
                    "address",
                    "name",
                    "symbol",
                    "totalSupply",
                    "tokenType",
                    "contractDeployer",
                    "deployedBlockNumber",
                    "metadata"
                ]
            },
            "NFTOwnedContractsResponse": {
                "type": "object",
                "properties": {
                    "contracts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contract"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "contracts",
                    "cursor"
                ]
            },
            "SaleDetailsItem": {
                "type": "object",
                "properties": {
                    "paymentTokenName": {
                        "type": "string",
                        "example": "Wrapped Ether"
                    },
                    "paymentTokenSymbol": {
                        "type": "string",
                        "example": "WETH"
                    },
                    "paymentTokenAddress": {
                        "type": "string",
                        "example": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                    },
                    "unitPrice": {
                        "type": "string",
                        "example": "296690000000000000000"
                    },
                    "unitPriceUsdCents": {
                        "type": "string",
                        "example": "113701828"
                    }
                },
                "required": [
                    "paymentTokenName",
                    "paymentTokenSymbol",
                    "paymentTokenAddress",
                    "unitPrice",
                    "unitPriceUsdCents"
                ]
            },
            "NFTTopSalesResponseItem": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "type": "string",
                        "example": "0x18a808dd312736fc75eb967fc61990af726f04e4"
                    },
                    "tokenId": {
                        "type": "string",
                        "example": "18"
                    },
                    "amount": {
                        "type": "string",
                        "example": "1"
                    },
                    "blockNumber": {
                        "type": "string",
                        "example": "13062953"
                    },
                    "transactionHash": {
                        "type": "string",
                        "example": "0xd89b54cb5aca6f501d43ee3363dcc892d31d1c185c9059c22d686ca0a1b93314"
                    },
                    "fromAddress": {
                        "type": "string",
                        "example": "0x0000000000000000000000000000000000000000"
                    },
                    "toAddress": {
                        "type": "string",
                        "example": "0x5c43b1ed97e52d009611d89b74fa829fe4ac56b1"
                    },
                    "contractType": {
                        "type": "string",
                        "example": "ERC721"
                    },
                    "timestamp": {
                        "type": "string",
                        "example": ""
                    },
                    "name": {
                        "type": "string",
                        "example": "BurnyBoy"
                    },
                    "symbol": {
                        "type": "string",
                        "example": "BURN"
                    },
                    "sales": {
                        "$ref": "#/components/schemas/SaleDetailsItem"
                    }
                },
                "required": [
                    "contractAddress",
                    "tokenId",
                    "amount",
                    "blockNumber",
                    "transactionHash",
                    "fromAddress",
                    "toAddress",
                    "contractType",
                    "timestamp",
                    "name",
                    "symbol",
                    "sales"
                ]
            },
            "NFTTopSalesResponse": {
                "type": "object",
                "properties": {
                    "sales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTTopSalesResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "sales",
                    "cursor"
                ]
            },
            "NFTOwnersByNftResponseItem": {
                "type": "object",
                "properties": {
                    "ownerAddress": {
                        "type": "string",
                        "example": "0x18a808dd312736fc75eb967fc61990af726f04e4"
                    },
                    "quantity": {
                        "type": "string",
                        "example": "18"
                    },
                    "acquiredDate": {
                        "type": "string",
                        "example": "2022-05-10T02:22:25Z"
                    }
                },
                "required": [
                    "ownerAddress",
                    "quantity",
                    "acquiredDate"
                ]
            },
            "NFTOwnersByNftResponse": {
                "type": "object",
                "properties": {
                    "owners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOwnersByNftResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "owners",
                    "cursor"
                ]
            },
            "NFTOwnersByContractResponseItem": {
                "type": "object",
                "properties": {
                    "ownerAddress": {
                        "type": "string",
                        "example": "0x18a808dd312736fc75eb967fc61990af726f04e4"
                    },
                    "quantity": {
                        "type": "string",
                        "example": "18"
                    },
                    "acquiredDate": {
                        "type": "string",
                        "example": "2022-05-10T02:22:25Z"
                    }
                },
                "required": [
                    "ownerAddress",
                    "quantity",
                    "acquiredDate"
                ]
            },
            "NFTOwnersByContractResponse": {
                "type": "object",
                "properties": {
                    "owners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOwnersByContractResponseItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "owners",
                    "cursor"
                ]
            },
            "NFTOwnersByCollectionIdResponseItem": {
                "type": "object",
                "properties": {
                    "ownerAddress": {
                        "type": "string",
                        "example": "0xE052113bd7D7700d623414a0a4585BCaE754E9d5"
                    },
                    "tokenId": {
                        "type": "string",
                        "example": "100010001"
                    },
                    "amount": {
                        "type": "string",
                        "example": "1"
                    },
                    "firstAcquired": {
                        "type": "string",
                        "example": "2020-10-29T14:51:03Z"
                    },
                    "lastAcquired": {
                        "type": "string",
                        "example": "2020-10-29T14:51:03Z"
                    }
                },
                "required": [
                    "ownerAddress",
                    "tokenId",
                    "amount",
                    "firstAcquired",
                    "lastAcquired"
                ]
            },
            "NFTOwnersByCollectionIdResponse": {
                "type": "object",
                "properties": {
                    "owners": {
                        "description": "Owners of the queried collections",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTOwnersByCollectionIdResponseItem"
                        }
                    },
                    "count": {
                        "type": "object",
                        "example": 2
                    }
                },
                "required": [
                    "owners",
                    "count"
                ]
            },
            "NFTListingResponseItem": {
                "type": "object",
                "properties": {
                    "listingTimestamp": {
                        "type": "string",
                        "example": "1702717942"
                    },
                    "expirationTimestamp": {
                        "type": "string",
                        "example": "1702804302"
                    },
                    "sellerAddress": {
                        "type": "string",
                        "example": "0x3820E27c3b37DA1dB6ad52f80CFBD0Fc927576ca"
                    },
                    "quantity": {
                        "type": "number",
                        "example": 1
                    },
                    "quantityRemaining": {
                        "type": "number",
                        "example": 1
                    },
                    "price": {
                        "type": "number",
                        "example": 1000000000000000000
                    },
                    "marketplace": {
                        "type": "string",
                        "example": "opensea"
                    },
                    "nftChain": {
                        "type": "string",
                        "example": "1"
                    },
                    "nftAddress": {
                        "type": "string",
                        "example": "0x3820E27c3b37DA1dB6ad52f80CFBD0Fc927576ca"
                    },
                    "nftId": {
                        "type": "string",
                        "example": "1"
                    },
                    "paymentTokenName": {
                        "type": "string",
                        "example": "Wrapped Ether"
                    },
                    "paymentTokenSymbol": {
                        "type": "string",
                        "example": "WETH"
                    },
                    "paymentTokenAddress": {
                        "type": "object",
                        "example": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
                    },
                    "paymentTokenDecimals": {
                        "type": "number",
                        "example": 18
                    }
                },
                "required": [
                    "listingTimestamp",
                    "expirationTimestamp",
                    "sellerAddress",
                    "quantity",
                    "quantityRemaining",
                    "price",
                    "marketplace",
                    "nftChain",
                    "nftAddress",
                    "nftId",
                    "paymentTokenName",
                    "paymentTokenSymbol",
                    "paymentTokenAddress",
                    "paymentTokenDecimals"
                ]
            },
            "NFTListingsResponse": {
                "type": "object",
                "properties": {
                    "listings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NFTListingResponseItem"
                        }
                    },
                    "count": {
                        "type": "object",
                        "description": "the total distinct count of Listings.",
                        "example": 11
                    }
                },
                "required": [
                    "listings",
                    "count"
                ]
            },
            "WalletTransactionItem": {
                "type": "object",
                "properties": {
                    "blockNumber": {
                        "type": "string",
                        "example": "17323211"
                    },
                    "transactionHash": {
                        "type": "string",
                        "example": "0x784d197ab8c9e7e59948d6a4b962e2763f394a215064484853f4d018e1d3cee9"
                    },
                    "successful": {
                        "type": "boolean",
                        "example": true
                    },
                    "fromAddress": {
                        "type": "string",
                        "example": "0x2604a43186019749a41e2b74daea1e31d9578f8b"
                    },
                    "toAddress": {
                        "type": "string",
                        "example": "0x3ff368db846c5e2e1076bd4caeb3ba60aff0b6a7"
                    },
                    "value": {
                        "type": "string",
                        "example": "1027681625640830489"
                    },
                    "gasLimit": {
                        "type": "string",
                        "example": "21000"
                    },
                    "gasSpent": {
                        "type": "string",
                        "example": "21000"
                    },
                    "gasPrice": {
                        "type": "string",
                        "example": "62159912446"
                    }
                },
                "required": [
                    "blockNumber",
                    "transactionHash",
                    "successful",
                    "fromAddress",
                    "toAddress",
                    "value",
                    "gasLimit",
                    "gasSpent",
                    "gasPrice"
                ]
            },
            "WalletTransactionsResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletTransactionItem"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "ALC_MHgyMzEyZjAwMTQ5ZDAxMDgwNmQ5ZWY2ZjNlYTMyMGViMWUxYTZiYzhlOjB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhYTpmYWxzZQ=="
                    }
                },
                "required": [
                    "transactions",
                    "cursor"
                ]
            },
            "TransactionResponse": {
                "type": "object",
                "properties": {}
            },
            "WalletTransactionsAdvancedResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PassthroughResponse"
                        }
                    },
                    "cursor": {
                        "type": "string",
                        "example": "MOR_eyJhbGciOiJIUzI1NiJ9.eyJ0YWJsZUluZGV4IjowLCJsYXN0RXZhbHVhdGVkS2V5Ijp7IndhbGxldEFkZHJlc3MiOiIweGQ4ZGE2YmYyNjk2NGFmOWQ3ZWVkOWUwM2U1MzQxNWQzN2FhOTYwNDUiLCJ0a"
                    }
                },
                "required": [
                    "transactions",
                    "cursor"
                ]
            },
            "PatchEndpointBody": {
                "type": "object",
                "properties": {}
            },
            "ScanStatsNativeSupplyResponse": {
                "type": "object",
                "properties": {
                    "supply": {
                        "type": "string",
                        "example": "122373866217800000000000000"
                    },
                    "staking": {
                        "type": "string",
                        "example": "1157529105115885000000000"
                    },
                    "burntFees": {
                        "type": "string",
                        "example": "3102505506455601519229842"
                    },
                    "withdrawnTotal": {
                        "type": "string",
                        "example": "1170200333006131000000000"
                    }
                },
                "required": [
                    "supply",
                    "staking",
                    "burntFees",
                    "withdrawnTotal"
                ]
            },
            "ScanStatsNativePriceResponse": {
                "type": "object",
                "properties": {
                    "nativeToBtc": {
                        "type": "string",
                        "example": "0.06116"
                    },
                    "nativeToUsd": {
                        "type": "string",
                        "example": "2149.18"
                    }
                },
                "required": [
                    "nativeToBtc",
                    "nativeToUsd"
                ]
            },
            "ScanStatsNativeNodeSizeResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanStatsNativeNodeCountResponse": {
                "type": "object",
                "properties": {
                    "nodeCount": {
                        "type": "string",
                        "example": "6413"
                    }
                },
                "required": [
                    "nodeCount"
                ]
            },
            "ScanGasConfirmationTimeResponse": {
                "type": "object",
                "properties": {
                    "secondsToBeConfirmed": {
                        "type": "string",
                        "example": "6413"
                    }
                },
                "required": [
                    "secondsToBeConfirmed"
                ]
            },
            "ScanGasPricesResponse": {
                "type": "object",
                "properties": {
                    "lastBlock": {
                        "type": "string",
                        "example": "13053741"
                    },
                    "safeGasPrice": {
                        "type": "string",
                        "example": "20"
                    },
                    "proposeGasPrice": {
                        "type": "string",
                        "example": "22"
                    },
                    "fastGasPrice": {
                        "type": "string",
                        "example": "24"
                    },
                    "suggestBaseFee": {
                        "type": "string",
                        "example": "19.230609716"
                    }
                },
                "required": [
                    "lastBlock",
                    "safeGasPrice",
                    "proposeGasPrice",
                    "fastGasPrice",
                    "suggestBaseFee"
                ]
            },
            "ScanTokenSupplyResponse": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Represents smallest decimal representation of token.",
                        "example": "123.4567"
                    }
                },
                "required": [
                    "balance"
                ]
            },
            "ScanTokenBalanceResponse": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Represents smallest decimal representation of token.",
                        "example": "123.4567"
                    }
                },
                "required": [
                    "balance"
                ]
            },
            "ScanTransactionExecutionStatusResponse": {
                "type": "object",
                "properties": {
                    "isError": {
                        "type": "string",
                        "description": "The isError field returns 0 for successful transactions and 1 for failed transactions.",
                        "example": "1"
                    },
                    "errDescription": {
                        "type": "object"
                    }
                },
                "required": [
                    "isError"
                ]
            },
            "ScanTransactionStatusCodeResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status field returns 0 for failed transactions and 1 for successful transactions.",
                        "example": "1"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "ScanBlockRewardsResponse": {
                "type": "object",
                "properties": {
                    "blockNumber": {
                        "type": "string",
                        "example": "12712551"
                    },
                    "timeStamp": {
                        "type": "string",
                        "example": "1472533979"
                    },
                    "blockMiner": {
                        "type": "string",
                        "example": "0x13a06d3dfe21e0db5c016c03ea7d2509f7f8d1e3"
                    },
                    "blockReward": {
                        "type": "string",
                        "example": "5314181600000000000"
                    },
                    "uncleInclusionReward": {
                        "type": "string",
                        "example": "312500000000000000"
                    }
                },
                "required": [
                    "blockNumber",
                    "timeStamp",
                    "blockMiner",
                    "blockReward",
                    "uncleInclusionReward"
                ]
            },
            "ScanBlockCountdownResponse": {
                "type": "object",
                "properties": {
                    "currentBlock": {
                        "type": "string",
                        "example": "12715477"
                    },
                    "countdownBlock": {
                        "type": "string",
                        "example": "16701588"
                    },
                    "remainingBlock": {
                        "type": "string",
                        "example": "3986111"
                    },
                    "estimateTimeInSec": {
                        "type": "string",
                        "example": "52616680.2"
                    }
                },
                "required": [
                    "currentBlock",
                    "countdownBlock",
                    "remainingBlock",
                    "estimateTimeInSec"
                ]
            },
            "ScanBlockByTimestampResponse": {
                "type": "object",
                "properties": {
                    "blockNumber": {
                        "type": "string",
                        "example": "12712551"
                    }
                },
                "required": [
                    "blockNumber"
                ]
            },
            "ScanAccountNativeBalanceSingleResponse": {
                "type": "object",
                "properties": {
                    "balance": {
                        "type": "string",
                        "example": "40891626854930000000000"
                    }
                },
                "required": [
                    "balance"
                ]
            },
            "ScanAccountNativeBalanceMultiResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanAccountNormalTransactionsResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanAccountInternalTransactionsAddressResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanAccountInternalTransactionsHashResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanAccountInternalTransactionBlockRangeResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanAccountErc20TokenTransferResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanAccountErc721TokenTransferResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanAccountErc1155TokenTransferResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanLogAddressResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanLogTopicsResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanLogAddressByTopicResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanContractAbiResponse": {
                "type": "object",
                "properties": {
                    "abi": {
                        "type": "string"
                    }
                },
                "required": [
                    "abi"
                ]
            },
            "ScanContractSourceCodeResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanContractCreationResponse": {
                "type": "object",
                "properties": {}
            },
            "ScanContractVerifyStatusBodyDto": {
                "type": "object",
                "properties": {
                    "sourceCode": {
                        "type": "string",
                        "description": "Contract Source Code (Flattened if necessary)",
                        "example": "abcd",
                        "default": "abcd"
                    },
                    "contractAddresses": {
                        "type": "string",
                        "description": "List of addresses to query (comma seperated. Max 5)",
                        "example": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D",
                        "default": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D"
                    },
                    "codeFormat": {
                        "type": "string",
                        "description": "solidity-single-file or solidity-standard-json-input",
                        "example": "solidity-single-file",
                        "default": "solidity-single-file"
                    },
                    "contractName": {
                        "type": "string",
                        "description": "ContractName (if codeformat=solidity-standard-json-input, then enter contractname as ex: erc20.sol:erc20)",
                        "example": "BoredApeYachtClub",
                        "default": "BoredApeYachtClub"
                    },
                    "compilerVersion": {
                        "type": "string",
                        "description": "see https://etherscan.io/solcversions for list of support versions",
                        "example": "v0.7.0+commit.9e61f92b",
                        "default": "v0.7.0+commit.9e61f92b"
                    },
                    "optimizationUsed": {
                        "type": "number",
                        "description": "use 0 for no optimization, and 1 if optimization was used",
                        "example": 0,
                        "default": 0
                    },
                    "includeRaw": {
                        "type": "boolean",
                        "description": "Returns the raw data given by the provider. WARNING: removes backup feature, and raw data returned is not normalized which might make switching providers difficult",
                        "example": null
                    }
                },
                "required": [
                    "sourceCode",
                    "contractAddresses",
                    "codeFormat",
                    "contractName",
                    "compilerVersion",
                    "optimizationUsed"
                ]
            },
            "ScanContractVerifyStatusResponse": {
                "type": "object",
                "properties": {
                    "guid": {
                        "type": "string"
                    }
                },
                "required": [
                    "guid"
                ]
            },
            "ScanContractVerifyProxyContractResponse": {
                "type": "object",
                "properties": {
                    "guid": {
                        "type": "string"
                    }
                },
                "required": [
                    "guid"
                ]
            },
            "JsonRpcBodyDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "object",
                        "description": "An identifier established by the Client.",
                        "example": 1,
                        "default": 1
                    },
                    "jsonrpc": {
                        "type": "string",
                        "description": "The version of the JSON-RPC protocol.",
                        "example": "2.0",
                        "default": "2.0"
                    },
                    "method": {
                        "type": "string",
                        "description": "A String containing the name of the method to be invoked.",
                        "enum": [
                            "abci_info",
                            "abci_query",
                            "avax.export",
                            "avax.exportAVAX",
                            "avax.exportKey",
                            "avax.getAtomicTx",
                            "avax.getAtomicTxStatus",
                            "avax.getUTXOs",
                            "avax.import",
                            "avax.importAVAX",
                            "avax.importKey",
                            "avax.issueTx",
                            "block",
                            "block_by_hash",
                            "block_results",
                            "blockchain",
                            "bor_getAuthor",
                            "bor_getCurrentProposer",
                            "bor_getCurrentValidators",
                            "bor_getRootHash",
                            "bor_getSignersAtHash",
                            "broadcast_evidence",
                            "broadcast_tx_async",
                            "broadcast_tx_sync",
                            "commit",
                            "consensus_params",
                            "consensus_state",
                            "db_getHex",
                            "db_getString",
                            "db_putHex",
                            "db_putString",
                            "debug_traceBlock",
                            "debug_traceBlockByHash",
                            "debug_traceBlockByNumber",
                            "debug_traceCall",
                            "debug_traceTransaction",
                            "dump_consensus_state",
                            "eth_accounts",
                            "eth_baseFee",
                            "eth_blockNumber",
                            "eth_call",
                            "eth_chainId",
                            "eth_coinbase",
                            "eth_compileLLL",
                            "eth_compileSerpent",
                            "eth_compileSolidity",
                            "eth_createAccessList",
                            "eth_estimateGas",
                            "eth_feeHistory",
                            "eth_gasPrice",
                            "eth_getAccount",
                            "eth_getAssetBalance",
                            "eth_getBalance",
                            "eth_getBlockByHash",
                            "eth_getBlockByNumber",
                            "eth_getBlockReceipts",
                            "eth_getBlockTransactionCountByHash",
                            "eth_getBlockTransactionCountByNumber",
                            "eth_getCode",
                            "eth_getCompilers",
                            "eth_getFilterChanges",
                            "eth_getFilterLogs",
                            "eth_getLogs",
                            "eth_getProof",
                            "eth_getRawTransactionByBlockHashAndIndex",
                            "eth_getRawTransactionByBlockNumberAndIndex",
                            "eth_getRawTransactionByHash",
                            "eth_getRootHash",
                            "eth_getSignersAtHash",
                            "eth_getStorageAt",
                            "eth_getTransactionByBlockHashAndIndex",
                            "eth_getTransactionByBlockNumberAndIndex",
                            "eth_getTransactionByHash",
                            "eth_getTransactionCount",
                            "eth_getTransactionReceipt",
                            "eth_getTransactionReceiptsByBlock",
                            "eth_getUncleByBlockHashAndIndex",
                            "eth_getUncleByBlockNumberAndIndex",
                            "eth_getUncleCountByBlockHash",
                            "eth_getUncleCountByBlockNumber",
                            "eth_getWork",
                            "eth_submitWork",
                            "eth_hashrate",
                            "eth_maxPriorityFeePerGas",
                            "eth_mining",
                            "eth_newBlockFilter",
                            "eth_newFilter",
                            "eth_newPendingTransactionFilter",
                            "eth_protocolVersion",
                            "eth_sendPrivateTransaction",
                            "eth_sendRawTransaction",
                            "eth_sendTransaction",
                            "eth_sign",
                            "eth_sign,",
                            "eth_signTransaction",
                            "eth_submitHashrate",
                            "eth_subscribe",
                            "eth_syncing",
                            "eth_uninstallFilter",
                            "eth_unsubscribe",
                            "genesis",
                            "health",
                            "health.health",
                            "info.getBlockchainID",
                            "info.getNetworkID",
                            "info.getNetworkName",
                            "info.getNodeVersion",
                            "info.getTxFee",
                            "info.uptime",
                            "net_info",
                            "net_listening",
                            "net_peerCount",
                            "net_version",
                            "num_unconfirmed_txs",
                            "status",
                            "trace_block",
                            "trace_call",
                            "trace_callMany",
                            "trace_filter",
                            "trace_transaction",
                            "tx",
                            "tx_search",
                            "txpool_content",
                            "txpool_contentFrom",
                            "txpool_inspect",
                            "txpool_status",
                            "unconfirmed_txs",
                            "validators",
                            "web3_clientVersion",
                            "web3_sha3",
                            "platform.getBalance",
                            "platform.getBlockchainStatus",
                            "platform.getBlockchains",
                            "platform.getCurrentSupply",
                            "platform.getCurrentValidators",
                            "platform.getHeight",
                            "platform.getMaxStakeAmount",
                            "platform.getMinStake",
                            "platform.getPendingValidators",
                            "platform.getRewardUTXOs",
                            "platform.getStake",
                            "platform.getStakingAssetID",
                            "platform.getSubnets",
                            "platform.getTimestamp",
                            "platform.getTotalStake",
                            "platform.getTx",
                            "platform.getTxStatus",
                            "platform.getUTXOs",
                            "platform.getValidatorsAt",
                            "platform.issueTx",
                            "platform.sampleValidators",
                            "platform.validatedBy",
                            "platform.validates",
                            "avm.buildGenesis",
                            "avm.getAddressTxs",
                            "avm.getAllBalances",
                            "avm.getAssetDescription",
                            "avm.getBalance",
                            "avm.getTx",
                            "avm.getTxStatus",
                            "avm.getUTXOs",
                            "avm.issueTx",
                            "index.getContainerByID",
                            "index.getContainerByIndex",
                            "index.getContainerRange",
                            "index.getIndex",
                            "index.getLastAccepted",
                            "index.isAccepted",
                            "arbtrace_block",
                            "arbtrace_call",
                            "arbtrace_callMany",
                            "arbtrace_filter",
                            "arbtrace_replayBlockTransactions",
                            "arbtrace_replayTransaction",
                            "arbtrace_transaction",
                            "trace_rawTransaction",
                            "debug_getBadBlocks",
                            "debug_storageRangeAt",
                            "debug_getTrieFlushInterval",
                            "debug_getRawReceipts",
                            "trace_replayBlockTransactions",
                            "trace_replayTransaction",
                            "ots_getApiLevel",
                            "ots_getInternalOperations",
                            "ots_hasCode",
                            "ots_getTransactionError",
                            "ots_traceTransaction",
                            "ots_getContractCreator",
                            "ots_getBlockDetails",
                            "ots_getBlockDetailsByHash",
                            "ots_getBlockTransactions",
                            "ots_searchTransactionsBefore",
                            "ots_searchTransactionsAfter",
                            "dag_getEvent",
                            "dag_getEventPayload",
                            "dag_getHeads",
                            "ftm_currentEpoch",
                            "trace_get",
                            "eth_getBalanceValues",
                            "optimism_outputAtBlock",
                            "optimism_syncStatus",
                            "optimism_rollupConfig",
                            "optimism_version",
                            "eth_estimateExecutionGas",
                            "getAccountInfo",
                            "getBalance",
                            "getBlock",
                            "getBlockCommitment",
                            "getBlockHeight",
                            "getBlockProduction",
                            "getBlockTime",
                            "getBlocks",
                            "getBlocksWithLimit",
                            "getClusterNodes",
                            "getConfirmedBlock",
                            "getConfirmedBlocks",
                            "getConfirmedBlocksWithLimit",
                            "getConfirmedSignaturesForAddress2",
                            "getConfirmedTransaction",
                            "getEpochInfo",
                            "getEpochSchedule",
                            "getFeeCalculatorForBlockhash",
                            "getFeeForMessage",
                            "getFeeRateGovernor",
                            "getFees",
                            "getFirstAvailableBlock",
                            "getGenesisHash",
                            "getHealth",
                            "getHighestSnapshotSlot",
                            "getIdentity",
                            "getInflationGovernor",
                            "getInflationRate",
                            "getInflationReward",
                            "getLargestAccounts",
                            "getLatestBlockhash",
                            "getLeaderSchedule",
                            "getMaxRetransmitSlot",
                            "getMaxShredInsertSlot",
                            "getMinimumBalanceForRentExemption",
                            "getMultipleAccounts",
                            "getParsedBlock",
                            "getParsedTransaction",
                            "getProgramAccounts",
                            "getRecentBlockhash",
                            "getRecentPerformanceSamples",
                            "getRecentPrioritizationFees",
                            "getSignatureStatuses",
                            "getSignaturesForAddress",
                            "getSlot",
                            "getSlotLeader",
                            "getSlotLeaders",
                            "getSnapshotSlot",
                            "getStakeMinimumDelegation",
                            "getStakeActivation",
                            "getSupply",
                            "getTokenAccountBalance",
                            "getTokenAccountsByDelegate",
                            "getTokenAccountsByOwner",
                            "getTokenLargestAccounts",
                            "getTokenSupply",
                            "getTransaction",
                            "getTransactionCount",
                            "getVersion",
                            "getVoteAccounts",
                            "isBlockhashValid",
                            "logSubscribe",
                            "logUnsubscribe",
                            "minimumLedgerSlot",
                            "requestAirdrop",
                            "rootSubscribe",
                            "rootUnsubscribe",
                            "sendTransaction",
                            "simulateTransaction",
                            "blob.Get",
                            "blob.GetAll",
                            "blob.GetProof",
                            "blob.Included",
                            "blob.Submit",
                            "das.SamplingStats",
                            "das.WaitCatchUp",
                            "fraud.Get",
                            "fraud.Subscribe",
                            "header.GetByHash",
                            "header.GetByHeight",
                            "header.GetRangeByHeight",
                            "header.LocalHead",
                            "header.NetworkHead",
                            "header.Subscribe",
                            "header.SyncState",
                            "header.SyncWait",
                            "header.WaitForHeight",
                            "node.AuthNew",
                            "node.AuthVerify",
                            "node.Info",
                            "node.LogLevelSet",
                            "p2p.BandwidthForPeer",
                            "p2p.BandwidthForProtocol",
                            "p2p.BandwidthStats",
                            "p2p.BlockPeer",
                            "p2p.ClosePeer",
                            "p2p.Connect",
                            "p2p.Connectedness",
                            "p2p.Info",
                            "p2p.IsProtected",
                            "p2p.ListBlockedPeers",
                            "p2p.NATStatus",
                            "p2p.PeerInfo",
                            "p2p.Peers",
                            "p2p.Protect",
                            "p2p.PubSubPeers",
                            "p2p.ResourceState",
                            "p2p.UnblockPeer",
                            "p2p.Unprotect",
                            "share.GetEDS",
                            "share.GetShare",
                            "share.GetSharesByNamespace",
                            "share.SharesAvailable",
                            "state.AccountAddress",
                            "state.Balance",
                            "state.BalanceForAddress",
                            "state.BeginRedelegate",
                            "state.CancelUnbondingDelegation",
                            "state.Delegate",
                            "state.QueryDelegation",
                            "state.QueryRedelegations",
                            "state.QueryUnbonding",
                            "state.SubmitPayForBlob",
                            "state.SubmitTx",
                            "state.Transfer",
                            "state.Undelegate",
                            "query",
                            "EXPERIMENTAL_changes",
                            "EXPERIMENTAL_changes_in_block",
                            "chunk",
                            "gas_price",
                            "EXPERIMENTAL_genesis_config",
                            "EXPERIMENTAL_protocol_config",
                            "send_tx",
                            "EXPERIMENTAL_tx_status",
                            "EXPERIMENTAL_receipt",
                            "broadcast_tx_commit",
                            "block_search",
                            "broadcast_tx",
                            "check_tx",
                            "dial_peers",
                            "dial_seeds",
                            "events",
                            "genesis_chunked",
                            "header",
                            "header_by_hash",
                            "remove_tx",
                            "subscribe",
                            "unsafe_flush_mempool",
                            "unsubscribe",
                            "unsubscribe_all",
                            "account",
                            "accounts",
                            "balance",
                            "accounttxs",
                            "blocktxs",
                            "height",
                            "state",
                            "supply",
                            "supportedchains",
                            "upgrade",
                            "param",
                            "allParams",
                            "app",
                            "apps",
                            "node",
                            "nodes",
                            "signinginfo",
                            "nodeclaim",
                            "nodeclaims",
                            "unsupportedtx",
                            "unsupportedtxs",
                            "/lts/state/account-all-fungible-resource-balances",
                            "/lts/state/account-deposit-behaviour",
                            "/lts/state/account-fungible-resource-balance",
                            "/lts/stream/account-transaction-outcomes",
                            "/lts/stream/transaction-outcomes",
                            "/lts/transaction/construction",
                            "/lts/transaction/status",
                            "/lts/transaction/submit",
                            "/mempool/list",
                            "/mempool/transaction",
                            "/state/access-controller",
                            "/state/account",
                            "/state/component",
                            "/state/consensus-manager",
                            "/state/non-fungible",
                            "/state/package",
                            "/state/resource",
                            "/state/validator",
                            "/status/network-configuration",
                            "/status/network-status",
                            "/status/scenarios",
                            "/stream/proofs",
                            "/stream/transactions",
                            "/transaction/call-preview",
                            "/transaction/parse",
                            "/transaction/preview",
                            "/transaction/receipt",
                            "/transaction/status",
                            "/transaction/submit",
                            "suix_getAllBalances",
                            "suix_getAllCoins",
                            "suix_getBalance",
                            "suix_getCoinMetadata",
                            "suix_getCoins",
                            "suix_getTotalSupply",
                            "suix_getDynamicFieldObject",
                            "suix_getDynamicFields",
                            "suix_getOwnedObjects",
                            "suix_queryEvents",
                            "suix_queryTransactionBlocks",
                            "suix_resolveNameServiceAddress",
                            "suix_resolveNameServiceNames",
                            "suix_subscribeEvent",
                            "suix_subscribeTransaction",
                            "suix_getCommitteeInfo",
                            "suix_getLatestSuiSystemState",
                            "suix_getReferenceGasPrice",
                            "suix_getStakes",
                            "suix_getStakesByIds",
                            "suix_getValidatorsApy",
                            "sui_getMoveFunctionArgTypes",
                            "sui_getNormalizedMoveFunction",
                            "sui_getNormalizedMoveModule",
                            "sui_getNormalizedMoveModulesByPackage",
                            "sui_getNormalizedMoveStruct",
                            "sui_getChainIdentifier",
                            "sui_getCheckpoint",
                            "sui_getCheckpoints",
                            "sui_getEvents",
                            "sui_getLatestCheckpointSequenceNumber",
                            "sui_getLoadedChildObjects",
                            "sui_getObject",
                            "sui_getProtocolConfig",
                            "sui_getTotalTransactionBlocks",
                            "sui_getTransactionBlock",
                            "sui_multiGetObjects",
                            "sui_multiGetTransactionBlocks",
                            "sui_tryGetPastObject",
                            "sui_tryMultiGetPastObjects",
                            "unsafe_batchTransaction",
                            "unsafe_mergeCoins",
                            "unsafe_moveCall",
                            "unsafe_pay",
                            "unsafe_payAllSui",
                            "unsafe_paySui",
                            "unsafe_publish",
                            "unsafe_requestAddStake",
                            "unsafe_requestWithdrawStake",
                            "unsafe_splitCoin",
                            "unsafe_splitCoinEqual",
                            "unsafe_transferObject",
                            "unsafe_transferSui",
                            "sui_devInspectTransactionBlock",
                            "sui_dryRunTransactionBlock",
                            "sui_executeTransactionBlock",
                            "getAsset",
                            "getAssetProof",
                            "getAssetsByAuthority",
                            "getAssetsByCreator",
                            "getAssetsByGroup",
                            "getAssetsByOwner",
                            "getSignaturesForAsset",
                            "signatureSubscribe",
                            "signatureUnsubscribe",
                            "slotSubscribe",
                            "slotUnsubscribe",
                            "blockSubscribe",
                            "logsSubscribe",
                            "logsUnsubscribe",
                            "zks_estimateFee",
                            "zks_getAllAccountBalances",
                            "zks_getBlockDetails",
                            "zks_getBridgeContracts",
                            "zks_getL1BatchBlockRange",
                            "zks_getL2ToL1LogProof",
                            "zks_getMainContract",
                            "zks_getRawBlockTransactions",
                            "zks_getTransactionDetails",
                            "zks_L1BatchNumber",
                            "zks_L1ChainId",
                            "zks_getBytecodeByHash",
                            "zks_getL1BatchDetails",
                            "zks_getL2ToL1MsgProof",
                            "zks_getProof",
                            "zks_getTestnetPaymaster",
                            "zks_estimateGasL1ToL2",
                            "zkevm_consolidatedBlockNumber",
                            "zkevm_isBlockConsolidated",
                            "zkevm_isBlockVirtualized",
                            "zkevm_batchNumberByBlockNumber",
                            "zkevm_batchNumber",
                            "zkevm_virtualBatchNumber",
                            "zkevm_verifiedBatchNumber",
                            "zkevm_getBatchByNumber",
                            "zkevm_getBroadcastURI",
                            "starknet_getClassHashAt",
                            "starknet_addDeployAccountTransaction",
                            "starknet_addDeclareTransaction",
                            "starknet_blockHashAndNumber",
                            "starknet_getStorageAt",
                            "starknet_blockNumber",
                            "starknet_getStateUpdate",
                            "starknet_getTransactionByBlockIdAndIndex",
                            "starknet_getTransactionReceipt",
                            "starknet_getBlockTransactionCount",
                            "starknet_call",
                            "starknet_estimateFee",
                            "starknet_getNonce",
                            "starknet_chainId",
                            "starknet_getTransactionByHash",
                            "starknet_syncing",
                            "starknet_getBlockWithTxHashes",
                            "starknet_getEvents",
                            "starknet_pendingTransactions",
                            "starknet_getClass",
                            "starknet_getBlockWithTxs",
                            "starknet_addInvokeTransaction",
                            "starknet_getClassAt",
                            "debug_gcStats",
                            "debug_traceCallMany",
                            "eth_getBlockRange",
                            "qn_getBlockWithReceipts",
                            "qn_getReceipts",
                            "rollup_gasPrices",
                            "getBlockAttestations",
                            "getBlockHeaders",
                            "getBlockRoot",
                            "getBlockHeader",
                            "getStateCommittees",
                            "getGenesis",
                            "getStateSyncCommittees",
                            "getStateFinalityCheckpoints",
                            "getStateFork",
                            "getStateRoot",
                            "getStateValidator",
                            "getStateValidatorBalances",
                            "getStateValidators",
                            "debug_getRawBlock",
                            "debug_getRawHeader",
                            "debug_getRawTransaction",
                            "engine_exchangeCapabilities",
                            "engine_exchangeTransitionConfigurationV1",
                            "engine_forkchoiceUpdatedV1",
                            "engine_forkchoiceUpdatedV2",
                            "engine_forkchoiceUpdatedV3",
                            "engine_getBlobsV1",
                            "engine_getPayloadBodiesByHashV1",
                            "engine_getPayloadBodiesByRangeV1",
                            "engine_getPayloadV1",
                            "engine_getPayloadV2",
                            "engine_getPayloadV3",
                            "engine_getPayloadV4",
                            "engine_newPayloadV1",
                            "engine_newPayloadV2",
                            "engine_newPayloadV3",
                            "engine_newPayloadV4",
                            "eth_blobBaseFee"
                        ],
                        "example": "eth_getBalance",
                        "default": "eth_getBalance"
                    },
                    "params": {
                        "type": "object",
                        "description": "A Structured value that holds the parameter values to be used during the invocation of the method.",
                        "example": [
                            "0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8",
                            "latest"
                        ],
                        "default": [
                            "0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8",
                            "latest"
                        ]
                    }
                },
                "required": [
                    "id",
                    "jsonrpc",
                    "method"
                ]
            },
            "JsonRpcResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "object"
                    },
                    "jsonrpc": {
                        "type": "string"
                    },
                    "result": {
                        "type": "object"
                    },
                    "status": {
                        "type": "number"
                    },
                    "data": {
                        "type": "object"
                    },
                    "error": {
                        "type": "object"
                    }
                },
                "required": [
                    "id",
                    "jsonrpc"
                ]
            },
            "EVMFilterLeaf": {
                "type": "object",
                "properties": {}
            },
            "EVMFilterItem": {
                "type": "object",
                "properties": {
                    "AND": {
                        "description": "An array of filter items to be combined with AND.",
                        "example": [
                            {
                                "leaf": {
                                    "field": "topic0",
                                    "operator": "eq",
                                    "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                                }
                            },
                            {
                                "leaf": {
                                    "field": "data",
                                    "operator": "gt",
                                    "value": "4294967295"
                                }
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "OR": {
                        "description": "An array of filter items to be combined with OR.",
                        "example": [
                            {
                                "leaf": {
                                    "field": "topic0",
                                    "operator": "eq",
                                    "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                                }
                            },
                            {
                                "leaf": {
                                    "field": "data",
                                    "operator": "gt",
                                    "value": "4294967295"
                                }
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "leaf": {
                        "description": "A filter leaf.",
                        "example": {
                            "field": "topic0",
                            "operator": "eq",
                            "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EVMFilterLeaf"
                            }
                        ]
                    }
                }
            },
            "CreateContractEventWebhookBody": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of webhook.",
                        "example": "My Webhook"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of webhook.",
                        "example": "My Webhook description"
                    },
                    "webhookUrl": {
                        "type": "string",
                        "description": "URL where webhooks are sent to.",
                        "example": "https://webhook.uniblock.dev"
                    },
                    "provider": {
                        "type": "string",
                        "enum": [
                            "Alchemy",
                            "Moralis",
                            "Tatum",
                            "SimpleHash",
                            "Helius"
                        ],
                        "description": "Provider of webhook service.",
                        "example": "Alchemy"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Additional metadata to be returned alongside a webhook response.",
                        "example": {
                            "source": "Uniblock"
                        }
                    },
                    "chainId": {
                        "type": "string",
                        "description": "Unique identifier for a blockchain network.",
                        "enum": [
                            42161,
                            42170,
                            33139,
                            592,
                            43114,
                            8453,
                            80094,
                            81457,
                            288,
                            56,
                            42220,
                            88888,
                            25,
                            9001,
                            1,
                            747,
                            250,
                            122,
                            100,
                            1666600000,
                            4689,
                            2222,
                            8217,
                            7887,
                            59144,
                            137,
                            1101,
                            5000,
                            1088,
                            1284,
                            1285,
                            397,
                            248,
                            66,
                            204,
                            10,
                            11297108109,
                            7070,
                            369,
                            151,
                            2020,
                            534352,
                            1329,
                            167000,
                            7000,
                            324,
                            2818,
                            2810,
                            "celestia",
                            "osmosis",
                            "pokt",
                            "radix",
                            "solana",
                            "sui",
                            "starknet",
                            421614,
                            43113,
                            84532,
                            80084,
                            23888,
                            97,
                            88882,
                            4157,
                            17000,
                            545,
                            4002,
                            10200,
                            59141,
                            80002,
                            5611,
                            11155420,
                            534351,
                            11155111,
                            1946,
                            2442,
                            7001,
                            300,
                            98865,
                            2741,
                            11124,
                            167009,
                            "solana-devnet",
                            "starknet-sepolia"
                        ],
                        "example": 1
                    },
                    "filter": {
                        "description": "An object representing the desired filters.",
                        "example": {
                            "AND": [
                                {
                                    "leaf": {
                                        "field": "topic0",
                                        "operator": "eq",
                                        "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                                    }
                                },
                                {
                                    "leaf": {
                                        "field": "data",
                                        "operator": "gt",
                                        "value": "4294967295"
                                    }
                                }
                            ]
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EVMFilterItem"
                            }
                        ]
                    },
                    "contractAddress": {
                        "type": "string",
                        "description": "Address of contract to watch.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                    },
                    "abi": {
                        "description": "ABI of contract to be watched. This field is required for usage with Moralis and is otherwise ignored.",
                        "example": [
                            {
                                "inputs": [
                                    {
                                        "internalType": "bytes4",
                                        "name": "interfaceId",
                                        "type": "bytes4"
                                    }
                                ],
                                "name": "supportsInterface",
                                "outputs": [
                                    {
                                        "internalType": "bool",
                                        "name": "",
                                        "type": "bool"
                                    }
                                ],
                                "stateMutability": "view",
                                "type": "function"
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "description",
                    "webhookUrl",
                    "provider",
                    "metadata",
                    "chainId",
                    "contractAddress"
                ]
            },
            "CreateAddressActivityWebhook": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of webhook.",
                        "example": "My Webhook"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of webhook.",
                        "example": "My Webhook description"
                    },
                    "webhookUrl": {
                        "type": "string",
                        "description": "URL where webhooks are sent to.",
                        "example": "https://webhook.uniblock.dev"
                    },
                    "provider": {
                        "type": "string",
                        "enum": [
                            "Alchemy",
                            "Moralis",
                            "Tatum",
                            "SimpleHash",
                            "Helius"
                        ],
                        "description": "Provider of webhook service.",
                        "example": "Alchemy"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Additional metadata to be returned alongside a webhook response.",
                        "example": {
                            "source": "Uniblock"
                        }
                    },
                    "chainId": {
                        "type": "string",
                        "description": "Unique identifier for a blockchain network.",
                        "enum": [
                            42161,
                            42170,
                            33139,
                            592,
                            43114,
                            8453,
                            80094,
                            81457,
                            288,
                            56,
                            42220,
                            88888,
                            25,
                            9001,
                            1,
                            747,
                            250,
                            122,
                            100,
                            1666600000,
                            4689,
                            2222,
                            8217,
                            7887,
                            59144,
                            137,
                            1101,
                            5000,
                            1088,
                            1284,
                            1285,
                            397,
                            248,
                            66,
                            204,
                            10,
                            11297108109,
                            7070,
                            369,
                            151,
                            2020,
                            534352,
                            1329,
                            167000,
                            7000,
                            324,
                            2818,
                            2810,
                            "celestia",
                            "osmosis",
                            "pokt",
                            "radix",
                            "solana",
                            "sui",
                            "starknet",
                            421614,
                            43113,
                            84532,
                            80084,
                            23888,
                            97,
                            88882,
                            4157,
                            17000,
                            545,
                            4002,
                            10200,
                            59141,
                            80002,
                            5611,
                            11155420,
                            534351,
                            11155111,
                            1946,
                            2442,
                            7001,
                            300,
                            98865,
                            2741,
                            11124,
                            167009,
                            "solana-devnet",
                            "starknet-sepolia"
                        ],
                        "example": 1
                    },
                    "filter": {
                        "description": "An object representing the desired filters.",
                        "example": {
                            "OR": [
                                {
                                    "leaf": {
                                        "field": "receiver",
                                        "operator": "eq",
                                        "value": "0x0000000000000000000000000000000000000000"
                                    }
                                },
                                {
                                    "leaf": {
                                        "field": "blockNumber",
                                        "operator": "gt",
                                        "value": "20000000"
                                    }
                                }
                            ]
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EVMFilterItem"
                            }
                        ]
                    },
                    "addresses": {
                        "description": "Addresses to be watched.",
                        "example": [
                            "0x89e51fA8CA5D66cd220bAed62ED01e8951aa7c40"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "description",
                    "webhookUrl",
                    "provider",
                    "metadata",
                    "chainId"
                ]
            },
            "SolanaFilterLeaf": {
                "type": "object",
                "properties": {}
            },
            "SolanaFilterItem": {
                "type": "object",
                "properties": {
                    "AND": {
                        "description": "An array of filter items to be combined with AND.",
                        "example": [
                            {
                                "leaf": {
                                    "field": "programId",
                                    "operator": "eq",
                                    "value": "DfXygSm4jCyNCybVYYK6DwvWqjKee8pbDmJGcLWNDXjh"
                                }
                            },
                            {
                                "leaf": {
                                    "field": "data",
                                    "operator": "gt",
                                    "value": "4294967295"
                                }
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "OR": {
                        "description": "An array of filter items to be combined with OR.",
                        "example": [
                            {
                                "leaf": {
                                    "field": "programId",
                                    "operator": "eq",
                                    "value": "DfXygSm4jCyNCybVYYK6DwvWqjKee8pbDmJGcLWNDXjh"
                                }
                            },
                            {
                                "leaf": {
                                    "field": "data",
                                    "operator": "gt",
                                    "value": "4294967295"
                                }
                            }
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "leaf": {
                        "description": "A filter leaf.",
                        "example": {
                            "field": "programId",
                            "operator": "eq",
                            "value": "DfXygSm4jCyNCybVYYK6DwvWqjKee8pbDmJGcLWNDXjh"
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SolanaFilterLeaf"
                            }
                        ]
                    }
                }
            },
            "CreateSolanaAddressActivityWebhook": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of webhook.",
                        "example": "My Webhook"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of webhook.",
                        "example": "My Webhook description"
                    },
                    "webhookUrl": {
                        "type": "string",
                        "description": "URL where webhooks are sent to.",
                        "example": "https://webhook.uniblock.dev"
                    },
                    "provider": {
                        "type": "string",
                        "enum": [
                            "Alchemy",
                            "Moralis",
                            "Tatum",
                            "SimpleHash",
                            "Helius"
                        ],
                        "description": "Provider of webhook service.",
                        "example": "Helius"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Additional metadata to be returned alongside a webhook response.",
                        "example": {
                            "source": "Uniblock"
                        }
                    },
                    "addresses": {
                        "description": "Accounts to be watched.",
                        "example": [
                            "vines1vzrYbzLMRdu58ou5XTby4qAqVRLmqo36NKPTg"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "filter": {
                        "description": "An object representing the desired filters.",
                        "example": {
                            "AND": [
                                {
                                    "leaf": {
                                        "field": "programId",
                                        "operator": "eq",
                                        "value": "DfXygSm4jCyNCybVYYK6DwvWqjKee8pbDmJGcLWNDXjh"
                                    }
                                },
                                {
                                    "leaf": {
                                        "field": "data",
                                        "operator": "gt",
                                        "value": "4294967295"
                                    }
                                }
                            ]
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SolanaFilterItem"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "description",
                    "webhookUrl",
                    "provider",
                    "metadata"
                ]
            },
            "CreateSimpleHashWebhook": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of webhook.",
                        "example": "My Webhook"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of webhook.",
                        "example": "My Webhook description"
                    },
                    "webhookUrl": {
                        "type": "string",
                        "description": "URL where webhooks are sent to.",
                        "example": "https://webhook.uniblock.dev"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Additional metadata to be returned alongside a webhook response.",
                        "example": {
                            "source": "Uniblock"
                        }
                    },
                    "webhookSecret": {
                        "type": "string",
                        "description": "We will sign messages sent to webhookUrl using webhookSecret. webhookSecret will be autogenerated if not specified. The secret should only contain alphanumeric characters [A-Za-z0-9]. Min/Max length: [32,64]. Recommended length: 32. webhookSecret will be stored in base64",
                        "example": {
                            "source": "Uniblock"
                        }
                    },
                    "chainIds": {
                        "type": "number",
                        "description": "Unique identifier for blockchain networks.",
                        "enum": [
                            {
                                "1": "ETH",
                                "10": "OPTIMISM",
                                "25": "CRONOS",
                                "56": "BSC",
                                "66": "OKTC",
                                "97": "BSCTESTNET",
                                "100": "GNOSIS_CHAIN",
                                "122": "FUSE",
                                "137": "MATIC",
                                "151": "REDBELLY",
                                "204": "OPBNB",
                                "248": "OASYS",
                                "250": "FTM",
                                "288": "BOBA",
                                "300": "ZKSYNC_SEPOLIA",
                                "324": "ZKSYNC",
                                "369": "PULSECHAIN",
                                "397": "NEAR",
                                "545": "FLOW_TESTNET",
                                "592": "ASTAR",
                                "747": "FLOW",
                                "1088": "METIS",
                                "1101": "POLYGON_ZKEVM",
                                "1284": "MOONBEAM",
                                "1285": "MOONRIVER",
                                "1329": "SEI",
                                "1946": "SONEIUM_MINATO",
                                "2020": "RONIN",
                                "2222": "KAVA",
                                "2442": "POLYGON_ZKEVM_CARDONA",
                                "2741": "ABSTRACT_MAINNET",
                                "2810": "MORPH_HOLESKY",
                                "2818": "MORPH",
                                "4002": "FTM_TESTNET",
                                "4157": "CROSSFI_TESTNET",
                                "4689": "IOTEX",
                                "5000": "MANTLE",
                                "5611": "OPBNB_TESTNET",
                                "7000": "ZETACHAIN",
                                "7001": "ZETACHAIN_TESTNET",
                                "7070": "PLANQ",
                                "7887": "KINTO",
                                "8217": "KLAYTN",
                                "8453": "BASE",
                                "9001": "EVMOS",
                                "10200": "GNOSIS_TESTNET",
                                "11124": "ABSTRACT_TESTNET",
                                "17000": "ETH_HOLESKY",
                                "23888": "BLAST_TESTNET",
                                "33139": "APECHAIN",
                                "42161": "ARBITRUM",
                                "42170": "ARBITRUM_NOVA",
                                "42220": "CELO",
                                "43113": "AVAX_FUJI",
                                "43114": "AVAX",
                                "59141": "LINEA_SEPOLIA",
                                "59144": "LINEA",
                                "80002": "MATIC_AMOY",
                                "80084": "BERACHAIN_BARTIO",
                                "80094": "BERACHAIN",
                                "81457": "BLAST",
                                "84532": "BASE_SEPOLIA",
                                "88882": "CHILIZ_TESTNET",
                                "88888": "CHILIZ",
                                "98865": "PLUME",
                                "167000": "TAIKO",
                                "167009": "TAIKO_HEKLA_TESTNET",
                                "421614": "ARB_SEPOLIA",
                                "534351": "SCROLL_SEPOLIA",
                                "534352": "SCROLL",
                                "11155111": "SEPOLIA",
                                "11155420": "OP_SEPOLIA",
                                "1666600000": "HARMONY_SHARD_ZERO",
                                "ARBITRUM": 42161,
                                "ARBITRUM_NOVA": 42170,
                                "APECHAIN": 33139,
                                "ASTAR": 592,
                                "AVAX": 43114,
                                "BASE": 8453,
                                "BERACHAIN": 80094,
                                "BLAST": 81457,
                                "BOBA": 288,
                                "BSC": 56,
                                "CELO": 42220,
                                "CHILIZ": 88888,
                                "CRONOS": 25,
                                "EVMOS": 9001,
                                "ETH": 1,
                                "FLOW": 747,
                                "FTM": 250,
                                "FUSE": 122,
                                "GNOSIS_CHAIN": 100,
                                "HARMONY_SHARD_ZERO": 1666600000,
                                "IOTEX": 4689,
                                "KAVA": 2222,
                                "KLAYTN": 8217,
                                "KINTO": 7887,
                                "LINEA": 59144,
                                "MATIC": 137,
                                "POLYGON_ZKEVM": 1101,
                                "MANTLE": 5000,
                                "METIS": 1088,
                                "MOONBEAM": 1284,
                                "MOONRIVER": 1285,
                                "NEAR": 397,
                                "OASYS": 248,
                                "OKTC": 66,
                                "OPBNB": 204,
                                "OPTIMISM": 10,
                                "PALM": 11297108109,
                                "11297108109": "PALM",
                                "PLANQ": 7070,
                                "PULSECHAIN": 369,
                                "REDBELLY": 151,
                                "RONIN": 2020,
                                "SCROLL": 534352,
                                "SEI": 1329,
                                "TAIKO": 167000,
                                "ZETACHAIN": 7000,
                                "ZKSYNC": 324,
                                "MORPH": 2818,
                                "MORPH_HOLESKY": 2810,
                                "CELESTIA": "celestia",
                                "OSMOSIS": "osmosis",
                                "POKT": "pokt",
                                "RADIX": "radix",
                                "SOLANA": "solana",
                                "SUI": "sui",
                                "STARKNET": "starknet",
                                "ARB_SEPOLIA": 421614,
                                "AVAX_FUJI": 43113,
                                "BASE_SEPOLIA": 84532,
                                "BERACHAIN_BARTIO": 80084,
                                "BLAST_TESTNET": 23888,
                                "BSCTESTNET": 97,
                                "CHILIZ_TESTNET": 88882,
                                "CROSSFI_TESTNET": 4157,
                                "ETH_HOLESKY": 17000,
                                "FLOW_TESTNET": 545,
                                "FTM_TESTNET": 4002,
                                "GNOSIS_TESTNET": 10200,
                                "LINEA_SEPOLIA": 59141,
                                "MATIC_AMOY": 80002,
                                "OPBNB_TESTNET": 5611,
                                "OP_SEPOLIA": 11155420,
                                "SCROLL_SEPOLIA": 534351,
                                "SEPOLIA": 11155111,
                                "SONEIUM_MINATO": 1946,
                                "POLYGON_ZKEVM_CARDONA": 2442,
                                "ZETACHAIN_TESTNET": 7001,
                                "ZKSYNC_SEPOLIA": 300,
                                "PLUME": 98865,
                                "ABSTRACT_MAINNET": 2741,
                                "ABSTRACT_TESTNET": 11124,
                                "TAIKO_HEKLA_TESTNET": 167009,
                                "SOLANA_DEVNET": "solana-devnet",
                                "STARKNET_SEPOLIA": "starknet-sepolia"
                            }
                        ],
                        "example": [
                            1
                        ]
                    },
                    "eventTypes": {
                        "type": "array",
                        "description": "Events types to subscribe to.",
                        "example": [
                            "wallet.inbound_transfer",
                            "wallet.outbound_transfer"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "wallet.inbound_transfer",
                                "wallet.outbound_transfer",
                                "nft.transfer",
                                "contract.transfer",
                                "contract.nft_metadata_update",
                                "chain.nft_metadata_update",
                                "chain.floor_price_update",
                                "chain.transfer",
                                "chain.listing_added",
                                "chain.listing_modified",
                                "chain.listing_removed",
                                "collection.floor_price_update",
                                "collection.transfer"
                            ]
                        }
                    },
                    "walletAddresses": {
                        "description": "Addresses watched by wallet event.",
                        "example": [
                            "0xfa6E0aDDF68267b8b6fF2dA55Ce01a53Fad6D8e2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contractAddresses": {
                        "description": "Addresses watched by contract event.",
                        "example": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "marketplaces": {
                        "description": "Marketplaces to monitor.",
                        "example": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "collectionIds": {
                        "description": "Collection Ids to monitor.",
                        "example": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nftIds": {
                        "description": "NFT Ids to monitor.",
                        "example": [],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "description",
                    "webhookUrl",
                    "metadata",
                    "webhookSecret",
                    "eventTypes"
                ]
            },
            "FilterItem": {
                "type": "object",
                "properties": {}
            },
            "UpdateWebhookBodyDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of webhook.",
                        "example": "My Webhook"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of webhook.",
                        "example": "My Webhook description"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Additional metadata to be returned alongside a webhook response.",
                        "example": {
                            "source": "Uniblock"
                        }
                    },
                    "addresses": {
                        "description": "Addresses to be watched.",
                        "example": [
                            "0x89e51fA8CA5D66cd220bAed62ED01e8951aa7c40"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "addAddresses": {
                        "description": "Add addresses to be watched.",
                        "example": [
                            "0x89e51fA8CA5D66cd220bAed62ED01e8951aa7c40"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removeAddresses": {
                        "description": "Remove addresses from being watched.",
                        "example": [
                            "0x89e51fA8CA5D66cd220bAed62ED01e8951aa7c40"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contractAddress": {
                        "type": "string",
                        "description": "Address of contract to watch.",
                        "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                    },
                    "filter": {
                        "description": "An object representing the desired filters.",
                        "example": {
                            "AND": [
                                {
                                    "leaf": {
                                        "field": "topic0",
                                        "operator": "eq",
                                        "value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                                    }
                                },
                                {
                                    "leaf": {
                                        "field": "data",
                                        "operator": "gt",
                                        "value": "4294967295"
                                    }
                                }
                            ]
                        },
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FilterItem"
                            }
                        ]
                    },
                    "chainIds": {
                        "type": "number",
                        "description": "Unique identifier for blockchain networks.",
                        "enum": [
                            {
                                "1": "ETH",
                                "10": "OPTIMISM",
                                "25": "CRONOS",
                                "56": "BSC",
                                "66": "OKTC",
                                "97": "BSCTESTNET",
                                "100": "GNOSIS_CHAIN",
                                "122": "FUSE",
                                "137": "MATIC",
                                "151": "REDBELLY",
                                "204": "OPBNB",
                                "248": "OASYS",
                                "250": "FTM",
                                "288": "BOBA",
                                "300": "ZKSYNC_SEPOLIA",
                                "324": "ZKSYNC",
                                "369": "PULSECHAIN",
                                "397": "NEAR",
                                "545": "FLOW_TESTNET",
                                "592": "ASTAR",
                                "747": "FLOW",
                                "1088": "METIS",
                                "1101": "POLYGON_ZKEVM",
                                "1284": "MOONBEAM",
                                "1285": "MOONRIVER",
                                "1329": "SEI",
                                "1946": "SONEIUM_MINATO",
                                "2020": "RONIN",
                                "2222": "KAVA",
                                "2442": "POLYGON_ZKEVM_CARDONA",
                                "2741": "ABSTRACT_MAINNET",
                                "2810": "MORPH_HOLESKY",
                                "2818": "MORPH",
                                "4002": "FTM_TESTNET",
                                "4157": "CROSSFI_TESTNET",
                                "4689": "IOTEX",
                                "5000": "MANTLE",
                                "5611": "OPBNB_TESTNET",
                                "7000": "ZETACHAIN",
                                "7001": "ZETACHAIN_TESTNET",
                                "7070": "PLANQ",
                                "7887": "KINTO",
                                "8217": "KLAYTN",
                                "8453": "BASE",
                                "9001": "EVMOS",
                                "10200": "GNOSIS_TESTNET",
                                "11124": "ABSTRACT_TESTNET",
                                "17000": "ETH_HOLESKY",
                                "23888": "BLAST_TESTNET",
                                "33139": "APECHAIN",
                                "42161": "ARBITRUM",
                                "42170": "ARBITRUM_NOVA",
                                "42220": "CELO",
                                "43113": "AVAX_FUJI",
                                "43114": "AVAX",
                                "59141": "LINEA_SEPOLIA",
                                "59144": "LINEA",
                                "80002": "MATIC_AMOY",
                                "80084": "BERACHAIN_BARTIO",
                                "80094": "BERACHAIN",
                                "81457": "BLAST",
                                "84532": "BASE_SEPOLIA",
                                "88882": "CHILIZ_TESTNET",
                                "88888": "CHILIZ",
                                "98865": "PLUME",
                                "167000": "TAIKO",
                                "167009": "TAIKO_HEKLA_TESTNET",
                                "421614": "ARB_SEPOLIA",
                                "534351": "SCROLL_SEPOLIA",
                                "534352": "SCROLL",
                                "11155111": "SEPOLIA",
                                "11155420": "OP_SEPOLIA",
                                "1666600000": "HARMONY_SHARD_ZERO",
                                "ARBITRUM": 42161,
                                "ARBITRUM_NOVA": 42170,
                                "APECHAIN": 33139,
                                "ASTAR": 592,
                                "AVAX": 43114,
                                "BASE": 8453,
                                "BERACHAIN": 80094,
                                "BLAST": 81457,
                                "BOBA": 288,
                                "BSC": 56,
                                "CELO": 42220,
                                "CHILIZ": 88888,
                                "CRONOS": 25,
                                "EVMOS": 9001,
                                "ETH": 1,
                                "FLOW": 747,
                                "FTM": 250,
                                "FUSE": 122,
                                "GNOSIS_CHAIN": 100,
                                "HARMONY_SHARD_ZERO": 1666600000,
                                "IOTEX": 4689,
                                "KAVA": 2222,
                                "KLAYTN": 8217,
                                "KINTO": 7887,
                                "LINEA": 59144,
                                "MATIC": 137,
                                "POLYGON_ZKEVM": 1101,
                                "MANTLE": 5000,
                                "METIS": 1088,
                                "MOONBEAM": 1284,
                                "MOONRIVER": 1285,
                                "NEAR": 397,
                                "OASYS": 248,
                                "OKTC": 66,
                                "OPBNB": 204,
                                "OPTIMISM": 10,
                                "PALM": 11297108109,
                                "11297108109": "PALM",
                                "PLANQ": 7070,
                                "PULSECHAIN": 369,
                                "REDBELLY": 151,
                                "RONIN": 2020,
                                "SCROLL": 534352,
                                "SEI": 1329,
                                "TAIKO": 167000,
                                "ZETACHAIN": 7000,
                                "ZKSYNC": 324,
                                "MORPH": 2818,
                                "MORPH_HOLESKY": 2810,
                                "CELESTIA": "celestia",
                                "OSMOSIS": "osmosis",
                                "POKT": "pokt",
                                "RADIX": "radix",
                                "SOLANA": "solana",
                                "SUI": "sui",
                                "STARKNET": "starknet",
                                "ARB_SEPOLIA": 421614,
                                "AVAX_FUJI": 43113,
                                "BASE_SEPOLIA": 84532,
                                "BERACHAIN_BARTIO": 80084,
                                "BLAST_TESTNET": 23888,
                                "BSCTESTNET": 97,
                                "CHILIZ_TESTNET": 88882,
                                "CROSSFI_TESTNET": 4157,
                                "ETH_HOLESKY": 17000,
                                "FLOW_TESTNET": 545,
                                "FTM_TESTNET": 4002,
                                "GNOSIS_TESTNET": 10200,
                                "LINEA_SEPOLIA": 59141,
                                "MATIC_AMOY": 80002,
                                "OPBNB_TESTNET": 5611,
                                "OP_SEPOLIA": 11155420,
                                "SCROLL_SEPOLIA": 534351,
                                "SEPOLIA": 11155111,
                                "SONEIUM_MINATO": 1946,
                                "POLYGON_ZKEVM_CARDONA": 2442,
                                "ZETACHAIN_TESTNET": 7001,
                                "ZKSYNC_SEPOLIA": 300,
                                "PLUME": 98865,
                                "ABSTRACT_MAINNET": 2741,
                                "ABSTRACT_TESTNET": 11124,
                                "TAIKO_HEKLA_TESTNET": 167009,
                                "SOLANA_DEVNET": "solana-devnet",
                                "STARKNET_SEPOLIA": "starknet-sepolia"
                            }
                        ],
                        "example": [
                            1
                        ]
                    },
                    "addChainIds": {
                        "type": "number",
                        "description": "Add unique identifiers for blockchain networks.",
                        "enum": [
                            {
                                "1": "ETH",
                                "10": "OPTIMISM",
                                "25": "CRONOS",
                                "56": "BSC",
                                "66": "OKTC",
                                "97": "BSCTESTNET",
                                "100": "GNOSIS_CHAIN",
                                "122": "FUSE",
                                "137": "MATIC",
                                "151": "REDBELLY",
                                "204": "OPBNB",
                                "248": "OASYS",
                                "250": "FTM",
                                "288": "BOBA",
                                "300": "ZKSYNC_SEPOLIA",
                                "324": "ZKSYNC",
                                "369": "PULSECHAIN",
                                "397": "NEAR",
                                "545": "FLOW_TESTNET",
                                "592": "ASTAR",
                                "747": "FLOW",
                                "1088": "METIS",
                                "1101": "POLYGON_ZKEVM",
                                "1284": "MOONBEAM",
                                "1285": "MOONRIVER",
                                "1329": "SEI",
                                "1946": "SONEIUM_MINATO",
                                "2020": "RONIN",
                                "2222": "KAVA",
                                "2442": "POLYGON_ZKEVM_CARDONA",
                                "2741": "ABSTRACT_MAINNET",
                                "2810": "MORPH_HOLESKY",
                                "2818": "MORPH",
                                "4002": "FTM_TESTNET",
                                "4157": "CROSSFI_TESTNET",
                                "4689": "IOTEX",
                                "5000": "MANTLE",
                                "5611": "OPBNB_TESTNET",
                                "7000": "ZETACHAIN",
                                "7001": "ZETACHAIN_TESTNET",
                                "7070": "PLANQ",
                                "7887": "KINTO",
                                "8217": "KLAYTN",
                                "8453": "BASE",
                                "9001": "EVMOS",
                                "10200": "GNOSIS_TESTNET",
                                "11124": "ABSTRACT_TESTNET",
                                "17000": "ETH_HOLESKY",
                                "23888": "BLAST_TESTNET",
                                "33139": "APECHAIN",
                                "42161": "ARBITRUM",
                                "42170": "ARBITRUM_NOVA",
                                "42220": "CELO",
                                "43113": "AVAX_FUJI",
                                "43114": "AVAX",
                                "59141": "LINEA_SEPOLIA",
                                "59144": "LINEA",
                                "80002": "MATIC_AMOY",
                                "80084": "BERACHAIN_BARTIO",
                                "80094": "BERACHAIN",
                                "81457": "BLAST",
                                "84532": "BASE_SEPOLIA",
                                "88882": "CHILIZ_TESTNET",
                                "88888": "CHILIZ",
                                "98865": "PLUME",
                                "167000": "TAIKO",
                                "167009": "TAIKO_HEKLA_TESTNET",
                                "421614": "ARB_SEPOLIA",
                                "534351": "SCROLL_SEPOLIA",
                                "534352": "SCROLL",
                                "11155111": "SEPOLIA",
                                "11155420": "OP_SEPOLIA",
                                "1666600000": "HARMONY_SHARD_ZERO",
                                "ARBITRUM": 42161,
                                "ARBITRUM_NOVA": 42170,
                                "APECHAIN": 33139,
                                "ASTAR": 592,
                                "AVAX": 43114,
                                "BASE": 8453,
                                "BERACHAIN": 80094,
                                "BLAST": 81457,
                                "BOBA": 288,
                                "BSC": 56,
                                "CELO": 42220,
                                "CHILIZ": 88888,
                                "CRONOS": 25,
                                "EVMOS": 9001,
                                "ETH": 1,
                                "FLOW": 747,
                                "FTM": 250,
                                "FUSE": 122,
                                "GNOSIS_CHAIN": 100,
                                "HARMONY_SHARD_ZERO": 1666600000,
                                "IOTEX": 4689,
                                "KAVA": 2222,
                                "KLAYTN": 8217,
                                "KINTO": 7887,
                                "LINEA": 59144,
                                "MATIC": 137,
                                "POLYGON_ZKEVM": 1101,
                                "MANTLE": 5000,
                                "METIS": 1088,
                                "MOONBEAM": 1284,
                                "MOONRIVER": 1285,
                                "NEAR": 397,
                                "OASYS": 248,
                                "OKTC": 66,
                                "OPBNB": 204,
                                "OPTIMISM": 10,
                                "PALM": 11297108109,
                                "11297108109": "PALM",
                                "PLANQ": 7070,
                                "PULSECHAIN": 369,
                                "REDBELLY": 151,
                                "RONIN": 2020,
                                "SCROLL": 534352,
                                "SEI": 1329,
                                "TAIKO": 167000,
                                "ZETACHAIN": 7000,
                                "ZKSYNC": 324,
                                "MORPH": 2818,
                                "MORPH_HOLESKY": 2810,
                                "CELESTIA": "celestia",
                                "OSMOSIS": "osmosis",
                                "POKT": "pokt",
                                "RADIX": "radix",
                                "SOLANA": "solana",
                                "SUI": "sui",
                                "STARKNET": "starknet",
                                "ARB_SEPOLIA": 421614,
                                "AVAX_FUJI": 43113,
                                "BASE_SEPOLIA": 84532,
                                "BERACHAIN_BARTIO": 80084,
                                "BLAST_TESTNET": 23888,
                                "BSCTESTNET": 97,
                                "CHILIZ_TESTNET": 88882,
                                "CROSSFI_TESTNET": 4157,
                                "ETH_HOLESKY": 17000,
                                "FLOW_TESTNET": 545,
                                "FTM_TESTNET": 4002,
                                "GNOSIS_TESTNET": 10200,
                                "LINEA_SEPOLIA": 59141,
                                "MATIC_AMOY": 80002,
                                "OPBNB_TESTNET": 5611,
                                "OP_SEPOLIA": 11155420,
                                "SCROLL_SEPOLIA": 534351,
                                "SEPOLIA": 11155111,
                                "SONEIUM_MINATO": 1946,
                                "POLYGON_ZKEVM_CARDONA": 2442,
                                "ZETACHAIN_TESTNET": 7001,
                                "ZKSYNC_SEPOLIA": 300,
                                "PLUME": 98865,
                                "ABSTRACT_MAINNET": 2741,
                                "ABSTRACT_TESTNET": 11124,
                                "TAIKO_HEKLA_TESTNET": 167009,
                                "SOLANA_DEVNET": "solana-devnet",
                                "STARKNET_SEPOLIA": "starknet-sepolia"
                            }
                        ],
                        "example": [
                            1
                        ]
                    },
                    "removeChainIds": {
                        "type": "number",
                        "description": "Remove unique identifiers for blockchain networks.",
                        "enum": [
                            {
                                "1": "ETH",
                                "10": "OPTIMISM",
                                "25": "CRONOS",
                                "56": "BSC",
                                "66": "OKTC",
                                "97": "BSCTESTNET",
                                "100": "GNOSIS_CHAIN",
                                "122": "FUSE",
                                "137": "MATIC",
                                "151": "REDBELLY",
                                "204": "OPBNB",
                                "248": "OASYS",
                                "250": "FTM",
                                "288": "BOBA",
                                "300": "ZKSYNC_SEPOLIA",
                                "324": "ZKSYNC",
                                "369": "PULSECHAIN",
                                "397": "NEAR",
                                "545": "FLOW_TESTNET",
                                "592": "ASTAR",
                                "747": "FLOW",
                                "1088": "METIS",
                                "1101": "POLYGON_ZKEVM",
                                "1284": "MOONBEAM",
                                "1285": "MOONRIVER",
                                "1329": "SEI",
                                "1946": "SONEIUM_MINATO",
                                "2020": "RONIN",
                                "2222": "KAVA",
                                "2442": "POLYGON_ZKEVM_CARDONA",
                                "2741": "ABSTRACT_MAINNET",
                                "2810": "MORPH_HOLESKY",
                                "2818": "MORPH",
                                "4002": "FTM_TESTNET",
                                "4157": "CROSSFI_TESTNET",
                                "4689": "IOTEX",
                                "5000": "MANTLE",
                                "5611": "OPBNB_TESTNET",
                                "7000": "ZETACHAIN",
                                "7001": "ZETACHAIN_TESTNET",
                                "7070": "PLANQ",
                                "7887": "KINTO",
                                "8217": "KLAYTN",
                                "8453": "BASE",
                                "9001": "EVMOS",
                                "10200": "GNOSIS_TESTNET",
                                "11124": "ABSTRACT_TESTNET",
                                "17000": "ETH_HOLESKY",
                                "23888": "BLAST_TESTNET",
                                "33139": "APECHAIN",
                                "42161": "ARBITRUM",
                                "42170": "ARBITRUM_NOVA",
                                "42220": "CELO",
                                "43113": "AVAX_FUJI",
                                "43114": "AVAX",
                                "59141": "LINEA_SEPOLIA",
                                "59144": "LINEA",
                                "80002": "MATIC_AMOY",
                                "80084": "BERACHAIN_BARTIO",
                                "80094": "BERACHAIN",
                                "81457": "BLAST",
                                "84532": "BASE_SEPOLIA",
                                "88882": "CHILIZ_TESTNET",
                                "88888": "CHILIZ",
                                "98865": "PLUME",
                                "167000": "TAIKO",
                                "167009": "TAIKO_HEKLA_TESTNET",
                                "421614": "ARB_SEPOLIA",
                                "534351": "SCROLL_SEPOLIA",
                                "534352": "SCROLL",
                                "11155111": "SEPOLIA",
                                "11155420": "OP_SEPOLIA",
                                "1666600000": "HARMONY_SHARD_ZERO",
                                "ARBITRUM": 42161,
                                "ARBITRUM_NOVA": 42170,
                                "APECHAIN": 33139,
                                "ASTAR": 592,
                                "AVAX": 43114,
                                "BASE": 8453,
                                "BERACHAIN": 80094,
                                "BLAST": 81457,
                                "BOBA": 288,
                                "BSC": 56,
                                "CELO": 42220,
                                "CHILIZ": 88888,
                                "CRONOS": 25,
                                "EVMOS": 9001,
                                "ETH": 1,
                                "FLOW": 747,
                                "FTM": 250,
                                "FUSE": 122,
                                "GNOSIS_CHAIN": 100,
                                "HARMONY_SHARD_ZERO": 1666600000,
                                "IOTEX": 4689,
                                "KAVA": 2222,
                                "KLAYTN": 8217,
                                "KINTO": 7887,
                                "LINEA": 59144,
                                "MATIC": 137,
                                "POLYGON_ZKEVM": 1101,
                                "MANTLE": 5000,
                                "METIS": 1088,
                                "MOONBEAM": 1284,
                                "MOONRIVER": 1285,
                                "NEAR": 397,
                                "OASYS": 248,
                                "OKTC": 66,
                                "OPBNB": 204,
                                "OPTIMISM": 10,
                                "PALM": 11297108109,
                                "11297108109": "PALM",
                                "PLANQ": 7070,
                                "PULSECHAIN": 369,
                                "REDBELLY": 151,
                                "RONIN": 2020,
                                "SCROLL": 534352,
                                "SEI": 1329,
                                "TAIKO": 167000,
                                "ZETACHAIN": 7000,
                                "ZKSYNC": 324,
                                "MORPH": 2818,
                                "MORPH_HOLESKY": 2810,
                                "CELESTIA": "celestia",
                                "OSMOSIS": "osmosis",
                                "POKT": "pokt",
                                "RADIX": "radix",
                                "SOLANA": "solana",
                                "SUI": "sui",
                                "STARKNET": "starknet",
                                "ARB_SEPOLIA": 421614,
                                "AVAX_FUJI": 43113,
                                "BASE_SEPOLIA": 84532,
                                "BERACHAIN_BARTIO": 80084,
                                "BLAST_TESTNET": 23888,
                                "BSCTESTNET": 97,
                                "CHILIZ_TESTNET": 88882,
                                "CROSSFI_TESTNET": 4157,
                                "ETH_HOLESKY": 17000,
                                "FLOW_TESTNET": 545,
                                "FTM_TESTNET": 4002,
                                "GNOSIS_TESTNET": 10200,
                                "LINEA_SEPOLIA": 59141,
                                "MATIC_AMOY": 80002,
                                "OPBNB_TESTNET": 5611,
                                "OP_SEPOLIA": 11155420,
                                "SCROLL_SEPOLIA": 534351,
                                "SEPOLIA": 11155111,
                                "SONEIUM_MINATO": 1946,
                                "POLYGON_ZKEVM_CARDONA": 2442,
                                "ZETACHAIN_TESTNET": 7001,
                                "ZKSYNC_SEPOLIA": 300,
                                "PLUME": 98865,
                                "ABSTRACT_MAINNET": 2741,
                                "ABSTRACT_TESTNET": 11124,
                                "TAIKO_HEKLA_TESTNET": 167009,
                                "SOLANA_DEVNET": "solana-devnet",
                                "STARKNET_SEPOLIA": "starknet-sepolia"
                            }
                        ],
                        "example": [
                            1
                        ]
                    },
                    "walletAddresses": {
                        "description": "Set addresses watched by wallet event.",
                        "example": [
                            "0xfa6E0aDDF68267b8b6fF2dA55Ce01a53Fad6D8e2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "addWalletAddresses": {
                        "description": "Add addresses watched by wallet event.",
                        "example": [
                            "0xfa6E0aDDF68267b8b6fF2dA55Ce01a53Fad6D8e2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removeWalletAddresses": {
                        "description": "Remove addresses watched by wallet event.",
                        "example": [
                            "0xfa6E0aDDF68267b8b6fF2dA55Ce01a53Fad6D8e2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contractAddresses": {
                        "description": "Set contract addresses for a webhook. Input format is `{chain}.{address}`",
                        "example": [
                            "ethereum.0x582048c4077a34e7c3799962f1f8c5342a3f4b12",
                            "solana.28PLEmWxWF2oib7Wh2TKoH3XVNuWyaxLejveBHLtFkJo"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "addContractAddresses": {
                        "description": "Addresses to add from webhook. Input format is `{chain}.{address}`",
                        "example": [
                            "ethereum.0x582048c4077a34e7c3799962f1f8c5342a3f4b12",
                            "solana.28PLEmWxWF2oib7Wh2TKoH3XVNuWyaxLejveBHLtFkJo"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removeContractAddresses": {
                        "description": "Addresses to remove from webhook. Input format is `{chain}.{address}`",
                        "example": [
                            "ethereum.0x582048c4077a34e7c3799962f1f8c5342a3f4b12",
                            "solana.28PLEmWxWF2oib7Wh2TKoH3XVNuWyaxLejveBHLtFkJo"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "marketplaces": {
                        "description": "Marketplaces to monitor.",
                        "example": [
                            "opensea",
                            "x2y2",
                            "looksrare"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "addMarketplaces": {
                        "description": "Additional marketplaces to monitor.",
                        "example": [
                            "opensea",
                            "x2y2",
                            "looksrare"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removeMarketplaces": {
                        "description": "Marketplaces to remove from monitoring.",
                        "example": [
                            "opensea",
                            "x2y2",
                            "looksrare"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "collectionIds": {
                        "description": "Collection Ids to monitor.",
                        "example": [
                            "510139ec0d8cf5513d59a8d3afa1c061"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "addCollectionIds": {
                        "description": "Additional collection Ids to monitor.",
                        "example": [
                            "510139ec0d8cf5513d59a8d3afa1c061"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removeCollectionIds": {
                        "description": "Collection Ids to remove from monitoring.",
                        "example": [
                            "510139ec0d8cf5513d59a8d3afa1c061"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nftIds": {
                        "description": "NFT Ids to monitor. Input format is `{chain}.{contract}.{token_id}` for EVM chains, `{chain}.{token_id}` for Solana",
                        "example": [
                            "ethereum.0x05b1ef501cfdeed15f73bfc4a926e528cd95d190.6120",
                            "solana.2iZBbRGnLVEEZH6JDsaNsTo66s2uxx7DTchVWKU8oisR"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "addNftIds": {
                        "description": "Addtional NFT Ids to monitor. Input format is `{chain}.{contract}.{token_id}` for EVM chains, `{chain}.{token_id}` for Solana",
                        "example": [
                            "ethereum.0x05b1ef501cfdeed15f73bfc4a926e528cd95d190.6120",
                            "solana.2iZBbRGnLVEEZH6JDsaNsTo66s2uxx7DTchVWKU8oisR"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "removeNftIds": {
                        "description": "NFT Ids to remove from monitoring. Input format is `{chain}.{contract}.{token_id}` for EVM chains, `{chain}.{token_id}` for Solana",
                        "example": [
                            "ethereum.0x05b1ef501cfdeed15f73bfc4a926e528cd95d190.6120",
                            "solana.2iZBbRGnLVEEZH6JDsaNsTo66s2uxx7DTchVWKU8oisR"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "description",
                    "metadata",
                    "contractAddress",
                    "chainIds",
                    "addChainIds",
                    "removeChainIds"
                ]
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-KEY",
                "description": "API key to access the API (Optional)"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "x-readme": {
        "samples-languages": [
            "javascript",
            "shell",
            "node",
            "python"
        ]
    }
}